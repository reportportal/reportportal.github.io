{"version":3,"file":"component---src-templates-accelerators-hlm-tsx-b41ee0065eb1c4328dcf.js","mappings":"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","sources":["webpack://reportportal.github.io/./src/components/IconBlock/IconBlock.tsx","webpack://reportportal.github.io/./src/svg/infoIcon.inline.svg","webpack://reportportal.github.io/./src/components/OfferPageWrapper/PentagonCard/PentagonCard.tsx","webpack://reportportal.github.io/./src/components/OfferPageWrapper/TimeScale/TimeScale.tsx","webpack://reportportal.github.io/./src/components/OfferPageWrapper/OfferPageWrapper.tsx","webpack://reportportal.github.io/./src/containers/AcceleratorsPage/D4jPage/constants.tsx","webpack://reportportal.github.io/./src/containers/AcceleratorsPage/QaspPage/constants.tsx","webpack://reportportal.github.io/./src/containers/AcceleratorsPage/QaspPage/QaspPage.tsx","webpack://reportportal.github.io/./src/containers/AcceleratorsPage/HealeniumPage/constants.tsx","webpack://reportportal.github.io/./src/containers/AcceleratorsPage/HealeniumPage/HealeniumPage.tsx","webpack://reportportal.github.io/./src/containers/AcceleratorsPage/D4jPage/D4jPage.tsx","webpack://reportportal.github.io/./src/templates/accelerators/hlm.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport classNames from 'classnames';\n\nimport './IconBlock.scss';\n\ninterface IconBlockProps {\n  type: string;\n  title: string;\n  progressNumber?: number;\n  description?: string;\n}\n\nexport const IconBlock: FC<IconBlockProps> = ({ type, title, description, progressNumber }) => {\n  const [text, benefit] = description?.split('\\\\n') ?? [];\n\n  return (\n    <div\n      className={classNames('icon-block', type, { [`${type}-${progressNumber}`]: progressNumber })}\n    >\n      <span\n        className={classNames('icon-block__number', {\n          'icon-block__number--only': !description,\n        })}\n      >\n        {title}\n      </span>\n      {text && <span className=\"icon-block__text\">{text}</span>}\n      {benefit && <span className=\"icon-block__benefit\">{benefit}</span>}\n    </div>\n  );\n};\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgInfoIconinline = function SvgInfoIconinline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 28,\n    height: 28,\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#009DBB\",\n    d: \"M14 2a12 12 0 1 0 12 12A12.013 12.013 0 0 0 14 2Zm0 22.154A10.154 10.154 0 1 1 24.154 14 10.165 10.165 0 0 1 14 24.154Zm1.846-4.616a.923.923 0 0 1-.923.924 1.846 1.846 0 0 1-1.846-1.847V14a.923.923 0 0 1 0-1.846A1.846 1.846 0 0 1 14.923 14v4.615a.923.923 0 0 1 .923.924ZM12.154 8.923a1.385 1.385 0 1 1 2.77 0 1.385 1.385 0 0 1-2.77 0Z\"\n  })));\n};\nexport default SvgInfoIconinline;","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { IconBlock } from '@app/components/IconBlock';\nimport { Link } from '@app/components/Link';\nimport { createBemBlockBuilder, formatNumberWithCommas, OfferingPlanDto } from '@app/utils';\n\nimport './PentagonCard.scss';\n\ninterface PentagonCardProps {\n  plan: OfferingPlanDto;\n  progressNumber: number;\n  contactLink: string;\n  pricingValue: number;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['pentagon-card']);\n\nexport const PentagonCard: FC<PentagonCardProps> = ({\n  plan,\n  contactLink,\n  progressNumber,\n  pricingValue,\n}) => (\n  <div className={getBlocksWith('__wrapper')}>\n    <IconBlock\n      title={plan.title}\n      description={plan.description}\n      type=\"pentagon\"\n      progressNumber={progressNumber}\n    />\n    <div className={getBlocksWith('__price')}>\n      {plan.pricingInfo ?? (\n        <>\n          {plan.price?.currency}\n          {formatNumberWithCommas(pricingValue)} <span>/ {plan.price?.period}</span>\n        </>\n      )}\n    </div>\n    <Link to={contactLink}>\n      <button\n        type=\"button\"\n        className={classNames(\n          getBlocksWith('__contact-button'),\n          'btn',\n          `btn--${plan.cta.type}`,\n          'btn--large',\n        )}\n      >\n        {plan.cta.link.title}\n      </button>\n    </Link>\n  </div>\n);\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { createBemBlockBuilder } from '@app/utils';\n\nimport './TimeScale.scss';\n\ninterface TimeScaleProps {\n  data: {\n    items: string[] | React.ReactNode[];\n    time: string | number;\n  }[];\n  isShifted?: boolean;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['time-scale']);\n\nexport const TimeScale: FC<TimeScaleProps> = ({ data, isShifted = false }) => (\n  <div\n    className={classNames(getBlocksWith('__wrapper'), {\n      [getBlocksWith('__wrapper-shifted')]: isShifted,\n    })}\n  >\n    <div\n      className={classNames(getBlocksWith('__periods-wrapper'), {\n        [getBlocksWith('__periods-wrapper--shifted')]: isShifted,\n      })}\n    >\n      {data.map(period => (\n        <div className={getBlocksWith('__period')} key={period.time}>\n          <span>{period.time}</span> hours\n        </div>\n      ))}\n    </div>\n    <div\n      className={classNames(getBlocksWith('__items-wrapper'), {\n        [getBlocksWith('__items-wrapper--shifted')]: isShifted,\n      })}\n    >\n      {data.map(period => (\n        <ul className={getBlocksWith('__list')} key={period.time}>\n          {period.items.map(item => (\n            <li key={item}>{item}</li>\n          ))}\n        </ul>\n      ))}\n    </div>\n  </div>\n);\n","import React, { FC } from 'react';\nimport { motion } from 'framer-motion';\nimport classNames from 'classnames';\nimport {\n  createBemBlockBuilder,\n  easeInOutOpacityScaleAnimationProps,\n  FormattedComparePlansDto,\n  OfferingPlansDto,\n} from '@app/utils';\nimport { usePricingHeroProps } from '@app/hooks/usePricingHeroProps';\nimport { FooterContent } from '@app/components/Layout';\nimport { TrustedOrganizations } from '@app/components/TrustedOrganizations';\nimport { Banner } from '@app/components/Banner';\nimport { Link } from '@app/components/Link';\nimport { PricingHero } from '@app/components/PricingHero';\nimport { ComparePlans } from '@app/components/ComparePlans';\nimport { Faq } from '@app/components/Faq';\nimport { CertificationCard } from '@app/components/CertificationCard';\nimport InfoIcon from '@app/svg/infoIcon.inline.svg';\nimport { useInView } from '@app/hooks/useInView';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\nimport { useAnimationEnabledForSiblingRoutes } from '@app/hooks/useAnimationEnabledForSiblingRoutes';\n\nimport { PentagonCard } from './PentagonCard';\nimport { TimeScale } from './TimeScale';\n\nimport './OfferPageWrapper.scss';\n\ninterface OfferPageWrapperProps {\n  hero: {\n    title: string;\n    subtitle?: string;\n    description: string;\n    offerType: string;\n  };\n  page: string;\n  pagePath: 'on-premises' | 'd4j' | 'qasp' | 'hlm';\n  timeScaleData: {\n    time: number | string;\n    items: string[] | React.ReactNode[];\n  }[];\n  plans: OfferingPlansDto;\n  comparePlans: FormattedComparePlansDto;\n  faqData: {\n    key: number;\n    label: string;\n    children: React.ReactNode;\n  }[];\n  contactUsLink: string;\n  utilizationDescription: string;\n  faqLink?: string;\n  isScaleShifted?: boolean;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['offer-page-wrapper']);\n\nexport const OfferPageWrapper: FC<OfferPageWrapperProps> = ({\n  hero: { title, subtitle, description, offerType },\n  page,\n  pagePath,\n  timeScaleData,\n  plans,\n  comparePlans,\n  faqData,\n  contactUsLink,\n  utilizationDescription,\n  faqLink,\n  isScaleShifted = false,\n}) => {\n  const { buttons, isYearlyPlanType, togglePlanType } = usePricingHeroProps(page);\n  const [cardsRef, areCardsInView] = useInView();\n  const isAnimationEnabled = useAnimationEnabledForSiblingRoutes();\n\n  const planType = isYearlyPlanType ? 'yearly' : 'quarterly';\n  const isPricingPage = page === 'pricing';\n\n  const getCardsAnimation = useMotionEnterAnimation(\n    easeInOutOpacityScaleAnimationProps,\n    isAnimationEnabled,\n  );\n\n  return (\n    <>\n      <PricingHero\n        title={title}\n        subtitle={subtitle}\n        buttons={buttons}\n        activeButton={offerType}\n        offerType={offerType}\n        description={description}\n        switcherProps={{\n          isYearlyPlanType,\n          togglePlanType,\n          messageInactive: 'Quarterly',\n          messageActive: 'Yearly (Save 5%)',\n        }}\n        isAnimationEnabled={isAnimationEnabled}\n      />\n      <motion.div\n        className={getBlocksWith('__pentagons')}\n        ref={cardsRef}\n        {...getCardsAnimation({\n          isInView: areCardsInView,\n          delay: 0.6,\n          additionalEffects: {\n            hiddenAdditional: {\n              y: 50,\n            },\n            enterAdditional: {\n              y: 0,\n            },\n          },\n        })}\n      >\n        {plans.items.map((plan, index) => {\n          const pricingValue = plan.price?.[planType];\n          const href = plan.cta.link.url;\n          const actionLink = plan.isContactUsURLEndsWithPlanType ? `${href}/${planType}` : href;\n\n          return (\n            <PentagonCard\n              plan={plan}\n              key={plan.title}\n              progressNumber={index + 1}\n              pricingValue={pricingValue as number}\n              contactLink={actionLink}\n            />\n          );\n        })}\n      </motion.div>\n      <div className={getBlocksWith('__utilization')}>\n        <h2>Indicative Professional Service Point utilization</h2>\n        <div className={getBlocksWith('__utilization-subtitle')}>{utilizationDescription}</div>\n        <TimeScale data={timeScaleData} isShifted={isScaleShifted} />\n        <div className={getBlocksWith('__subscription-info')}>\n          <InfoIcon />\n          <div>\n            Subscription plan Professional Service Points are accumulated monthly and last depending\n            on the plan selected.\n            <Link to=\"#faq\">More details in FAQ</Link>\n          </div>\n        </div>\n      </div>\n      <ComparePlans plans={comparePlans} isCollapsibleOnMobile={false} />\n      {isPricingPage && (\n        <>\n          <div\n            className={classNames(getBlocksWith('__trusted-organizations-container'), 'container')}\n          >\n            <TrustedOrganizations />\n          </div>\n          <div className={classNames(getBlocksWith('__certificates-container'), 'container')}>\n            <CertificationCard\n              subtitle=\"Ensuring the highest security standards\"\n              shouldDisplayLink\n            />\n          </div>\n        </>\n      )}\n      <div className={getBlocksWith('__faq-container')}>\n        <Faq\n          items={faqData}\n          titleId=\"faq\"\n          documentationLink={faqLink}\n          showMoreInfoLink={pagePath !== 'qasp'}\n        />\n      </div>\n      <FooterContent>\n        <Banner title=\"Do you still have questions?\" linkTitle=\"Contact us\" link={contactUsLink} />\n      </FooterContent>\n    </>\n  );\n};\n","import React from 'react';\n\nexport type TimeScaleData = {\n  time: number;\n  items: string[];\n}[];\n\nexport type FaqData = {\n  key: number;\n  label: string;\n  children: React.ReactNode;\n};\n\nexport const TIME_SCALE_DATA: TimeScaleData = [\n  {\n    time: 20,\n    items: ['Deploy and configure Drill4J services'],\n  },\n  {\n    time: 40,\n    items: [\n      'Setup Drill4J Application Agent(s)',\n      'Setup Drill4J Automated Testing Agent(s)',\n      'Support',\n    ],\n  },\n  {\n    time: 80,\n    items: ['Data gather dry-run', 'Create integration plan'],\n  },\n];\n\nexport const FAQ_DATA: FaqData[] = [\n  {\n    key: 1,\n    label: 'What is the validity period for Professional Service Points?',\n    children: (\n      <div>\n        The Professional Service Points included into the subscription plan are accumulated on a\n        monthly basis and are valid for the payment term only. If quarterly payment option is\n        chosen, no more than 3 monthly amounts of Professional Service Points can be accumulated or\n        used prospectively; if yearly payment option is chosen, up to 12 monthly amounts of\n        Professional Service Points can be accumulated or used prospectively.\n      </div>\n    ),\n  },\n  {\n    key: 2,\n    label: 'How is my subscription charged?',\n    children: (\n      <div>\n        Company will pay a fixed fee, in advance, based on the service level elected in the Order\n        Form.\n      </div>\n    ),\n  },\n  {\n    key: 3,\n    label: 'Can I pay monthly?',\n    children: (\n      <>\n        <div>Unfortunately, not for now.</div>\n        <div>\n          But we work to make it possible. Currently we do semi-manual invoice processing which\n          requires effort of the operations and accounting teams.\n        </div>\n        <div>\n          Monthly payments will be available as soon as we add online payment capabilities. This is\n          our highest priority at the moment.\n        </div>\n      </>\n    ),\n  },\n  {\n    key: 4,\n    label: 'What payment methods do you accept?',\n    children: (\n      <div>\n        As for now, the payment can be made via bank transfer (ACH, Wire) or check. Later on, we\n        plan to provide alternative forms of payment.\n      </div>\n    ),\n  },\n  {\n    key: 5,\n    label: 'Can I change billing plans at any time?',\n    children: (\n      <>\n        <div>Unfortunately, no.</div>\n        <div>You can&apos;t downgrade your billing plan at any time.</div>\n        <div>\n          However, if you need more Professional Service Points, we can discuss the plan upgrade.\n          For that, please, press &quot;Get a Quote&quot; in the upper right corner of our landing\n          page. We&apos;ll be happy to help you to find the most suitable plan for your team and\n          provide a quote.\n        </div>\n      </>\n    ),\n  },\n  {\n    key: 6,\n    label: 'What if I overuse or underuse my monthly limit?',\n    children: (\n      <>\n        <div>\n          If Company seeks to consume more Professional Service Points than have been contracted for\n          according to the Order, overage fees of 25% on a per Professional Service Point basis will\n          apply.\n        </div>\n        <div>\n          Professional Service Points may be used for the duration of the payment term, and expire\n          at that time. For example, annual upfront payment entitles Company to use the contracted\n          monthly service points at any point in the year. For a quarterly upfront payment, service\n          points must be used within three months.\n        </div>\n      </>\n    ),\n  },\n  {\n    key: 7,\n    label: 'What are the business hours of the service team?',\n    children: (\n      <div>\n        Unless otherwise agreed in writing, ReportPortal service personnel are located in the CET\n        time zone (UTC +1). Commercially reasonable efforts will be made to find overlap times where\n        synchronous communication with a Company is required. For purposes of finding overlap times,\n        the Company agrees to make its personnel available between 8 AM and 6 PM when synchronous\n        communication is required.\n      </div>\n    ),\n  },\n];\n","export const TIME_SCALE_DATA = [\n  {\n    time: '4+',\n    items: [\n      'Maintenance and Monitoring of Existing QaSpace plugin installation',\n      'Team Training and Webinars',\n    ],\n  },\n  {\n    time: '15+',\n    items: ['Prioritized Bug Fixing'],\n  },\n  {\n    time: '200+',\n    items: ['QaSpace plugin Custom Development Services'],\n  },\n];\n","import React, { FC } from 'react';\nimport { OfferPageWrapper } from '@app/components/OfferPageWrapper';\nimport { OfferingPlansQuery, formatOfferingPlans } from '@app/utils';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { FAQ_DATA } from '../D4jPage/constants';\nimport { TIME_SCALE_DATA } from './constants';\n\nexport const QaspPage: FC = () => {\n  const { plans, comparePlans } = formatOfferingPlans(\n    useStaticQuery<OfferingPlansQuery>(graphql`\n      query {\n        allContentfulComparePlan(filter: { internalTitle: { eq: \"QaSpace Compare Plan\" } }) {\n          nodes {\n            ...ComparePlanFields\n          }\n        }\n        allContentfulSection(filter: { internalTitle: { eq: \"[Offering Plan] QaSpace\" } }) {\n          nodes {\n            ...OfferingPlansFields\n          }\n        }\n      }\n    `),\n  );\n\n  return (\n    <OfferPageWrapper\n      hero={{\n        title: 'Explore pricing packages for our accelerators',\n        description:\n          'is a Jira plugin with an easy-to-use interface which specializes on QA activities, making testing as a seamless part of your Jira-based workflow.',\n        offerType: 'QaSpace',\n      }}\n      page=\"accelerators\"\n      pagePath=\"qasp\"\n      timeScaleData={TIME_SCALE_DATA}\n      contactUsLink=\"/contact-us/qasp\"\n      plans={plans}\n      comparePlans={comparePlans}\n      faqData={FAQ_DATA}\n      utilizationDescription=\"Our team will provide services in support of Client's use of QaSpace plugin. Such services will vary based on Client's needs. The table below describes the different support services we customarily provide.\"\n    />\n  );\n};\n","import React from 'react';\n\nexport const TIME_SCALE_DATA = [\n  {\n    time: 8,\n    items: [<>Responding&nbsp;to&nbsp;Healenium support Questions</>],\n  },\n  {\n    time: 56,\n    items: [\n      'Updating of Healenium and supporting libraries',\n      'Integration of Healenium with CI/CD Pipelines',\n      'Team Training and Webinars',\n    ],\n  },\n  {\n    time: 112,\n    items: ['Healenium Custom Development Services'],\n  },\n];\n\nexport const FAQ_DATA = [\n  {\n    key: 1,\n    label: 'What is the validity period for Professional Service Points?',\n    children: (\n      <div>\n        The Professional Service Points included into the subscription plan are accumulated on a\n        monthly basis and are valid for the payment term only. If quarterly payment option is\n        chosen, no more than 3 monthly amounts of Professional Service Points can be accumulated or\n        used prospectively; if yearly payment option is chosen, up to 12 monthly amounts of\n        Professional Service Points can be accumulated or used prospectively.\n      </div>\n    ),\n  },\n  {\n    key: 2,\n    label: 'Will Healenium work with my test automation framework?',\n    children: (\n      <div>\n        Healenium will work with any kind of Java + Selenium-based test automation framework.\n      </div>\n    ),\n  },\n  {\n    key: 3,\n    label: 'How can I try to use the product?',\n    children: <div>Follow installation instructions on GitHub.</div>,\n  },\n  {\n    key: 4,\n    label: 'Can I use it for mobile automation?',\n    children: <div>Yes, there is an adapter that supports Appium-based testing solutions.</div>,\n  },\n];\n","import React, { FC } from 'react';\nimport { OfferPageWrapper } from '@app/components/OfferPageWrapper';\nimport { formatOfferingPlans, OfferingPlansQuery } from '@app/utils';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { TIME_SCALE_DATA, FAQ_DATA } from './constants';\n\nexport const HealeniumPage: FC = () => {\n  const { plans, comparePlans } = formatOfferingPlans(\n    useStaticQuery<OfferingPlansQuery>(graphql`\n      query {\n        allContentfulComparePlan(filter: { internalTitle: { eq: \"Healenium Compare Plan\" } }) {\n          nodes {\n            ...ComparePlanFields\n          }\n        }\n        allContentfulSection(filter: { internalTitle: { eq: \"[Offering Plan] Healenium\" } }) {\n          nodes {\n            ...OfferingPlansFields\n          }\n        }\n      }\n    `),\n  );\n\n  return (\n    <OfferPageWrapper\n      hero={{\n        title: 'Explore pricing packages for our accelerators',\n        description:\n          'is a language agnostic proxy solution which enables self-healing capabilities by means of ML for selenium-based test cases aimed at minimization of UI fluctuations',\n        offerType: 'Healenium',\n      }}\n      page=\"accelerators\"\n      pagePath=\"hlm\"\n      timeScaleData={TIME_SCALE_DATA}\n      plans={plans}\n      comparePlans={comparePlans}\n      faqData={FAQ_DATA}\n      contactUsLink=\"/contact-us/hlm\"\n      utilizationDescription=\"Our team will provide services in support of Client's use of Healenium plugin. Such services will vary based on Client's needs. The table below describes the different support services we customarily provide\"\n      faqLink=\"https://healenium.io/#rec639241711\"\n      isScaleShifted\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { OfferPageWrapper } from '@app/components/OfferPageWrapper';\nimport { OfferingPlansQuery, formatOfferingPlans } from '@app/utils';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { TIME_SCALE_DATA, FAQ_DATA } from './constants';\n\nexport const D4jPage: FC = () => {\n  const { plans, comparePlans } = formatOfferingPlans(\n    useStaticQuery<OfferingPlansQuery>(graphql`\n      query {\n        allContentfulComparePlan(filter: { internalTitle: { eq: \"Drill4J Compare Plan\" } }) {\n          nodes {\n            ...ComparePlanFields\n          }\n        }\n        allContentfulSection(filter: { internalTitle: { eq: \"[Offering Plan] Drill4J\" } }) {\n          nodes {\n            ...OfferingPlansFields\n          }\n        }\n      }\n    `),\n  );\n\n  return (\n    <OfferPageWrapper\n      hero={{\n        title: 'Explore pricing packages for our accelerators',\n        description:\n          'is a tool to identify testing gaps and reduce time spent on regression testing. It provides a straight path to incorporate Test Gap Analysis and Test Impact Analysis into SDLC. It makes testing efforts observable, quantifiable and measurable.',\n        offerType: 'Drill4J',\n      }}\n      page=\"accelerators\"\n      pagePath=\"d4j\"\n      timeScaleData={TIME_SCALE_DATA}\n      plans={plans}\n      comparePlans={comparePlans}\n      faqData={FAQ_DATA}\n      contactUsLink=\"/contact-us/d4j\"\n      utilizationDescription=\"Our team will provide services in support of Client's use of Drill4J plugin. Such services will vary based on Client's needs. The table below describes the different support services we customarily provide\"\n      faqLink=\"https://drill4j.github.io/docs/faq\"\n      isScaleShifted\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { Layout, Seo } from '@app/components/Layout';\nimport { HealeniumPage } from '@app/containers/AcceleratorsPage';\nimport { SEO_DATA } from '@app/utils';\n\nconst Hlm: FC = () => (\n  <Layout className=\"offer-page-wrapper\">\n    <HealeniumPage />\n  </Layout>\n);\n\nexport default Hlm;\n\nexport const Head = () => {\n  const { title, description } = SEO_DATA.hlm;\n\n  return <Seo title={title} description={description} />;\n};\n"],"names":["IconBlock","_ref","_description$split","type","title","description","progressNumber","text","benefit","split","React","className","classNames","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","props","xmlns","width","height","fill","d","getBlocksWith","createBemBlockBuilder","PentagonCard","_plan$pricingInfo","_plan$price","_plan$price2","plan","contactLink","pricingValue","pricingInfo","price","currency","formatNumberWithCommas","period","Link","to","cta","link","TimeScale","data","isShifted","map","time","items","item","OfferPageWrapper","hero","subtitle","offerType","page","pagePath","timeScaleData","plans","comparePlans","faqData","contactUsLink","utilizationDescription","faqLink","isScaleShifted","buttons","isYearlyPlanType","togglePlanType","usePricingHeroProps","cardsRef","areCardsInView","useInView","isAnimationEnabled","useAnimationEnabledForSiblingRoutes","planType","isPricingPage","getCardsAnimation","useMotionEnterAnimation","easeInOutOpacityScaleAnimationProps","PricingHero","activeButton","switcherProps","messageInactive","messageActive","motion","div","ref","isInView","delay","additionalEffects","hiddenAdditional","y","enterAdditional","index","href","url","actionLink","isContactUsURLEndsWithPlanType","InfoIcon","ComparePlans","isCollapsibleOnMobile","TrustedOrganizations","CertificationCard","shouldDisplayLink","Faq","titleId","documentationLink","showMoreInfoLink","FooterContent","Banner","linkTitle","TIME_SCALE_DATA","FAQ_DATA","label","children","QaspPage","formatOfferingPlans","useStaticQuery","HealeniumPage","D4jPage","Hlm","Layout","Head","SEO_DATA","hlm","Seo"],"sourceRoot":""}