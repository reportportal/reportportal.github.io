{"version":3,"file":"component---src-pages-blog-tsx-b944c2f713a32afde8fc.js","mappings":"+NAaO,MAAMA,EAAiFC,IAOvF,IAPwF,WAC7FC,EAAaC,EAAAA,GAAmB,MAChCC,EAAK,YACLC,EAAc,EAAC,UACfC,EAAS,mBACTC,GAAqB,EAAI,SACzBC,GACDP,EACC,MAAOQ,EAAUC,IAAiBC,EAAAA,EAAAA,KAE5BC,GAAeC,EAAAA,EAAAA,GACnB,IAAKC,EAAAA,GAA4BZ,cACjCK,GAGF,OAAOQ,EAAAA,EAAAA,eACLC,EAAAA,EAAO,IAAIX,GACX,CAAEC,YAAWW,IAAKR,KAAaG,EAAa,CAAEM,SAAUR,EAAeN,WACvEI,EACD,C,4DChCCW,E,uIACJ,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,IAcA,EAdsB,SAAyBS,GAC7C,OAAoB,gBAAoB,MAAOf,EAAS,CACtDgB,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,QACLJ,GAAQhB,IAAUA,EAAqB,gBAAoB,OAAQ,CACpEqB,OAAQ,UACRC,cAAe,QACfC,eAAgB,QAChBC,YAAa,EACbC,EAAG,kKAEP,ECLA,MAAMC,GAAgBC,EAAAA,EAAAA,IAAsB,CAAC,mBAEhCC,EAAwC9C,IAAA,IAAC,WAAE+C,GAAY/C,EAAA,OAClEgD,EAAAA,cAAA,KAAG3C,UAAWuC,KACZI,EAAAA,cAAA,QAAM3C,UAAWuC,EAAc,WAC7BI,EAAAA,cAACC,EAAU,OAEZF,EACC,ECTAH,GAAgBC,EAAAA,EAAAA,IAAsB,CAAC,yBAMhCK,EAAkDlD,IAAA,IAAAmD,EAAA,IAAC,KAAEC,GAAMpD,EAAA,OACtEgD,EAAAA,cAAA,MAAI3C,UAAWuC,KACbI,EAAAA,cAACK,EAAAA,GAAI,CAACC,GAAE,SAAWF,EAAKG,KAAQlD,UAAWuC,EAAc,WACvDI,EAAAA,cAAA,OAAK3C,UAAWuC,EAAc,qBAC5BI,EAAAA,cAAA,OAAKQ,IAAKJ,EAAKK,cAAcC,YAAaC,IAAKP,EAAKK,cAAcG,KAAKC,OAEzEb,EAAAA,cAAA,OAAK3C,UAAWuC,EAAc,cAC5BI,EAAAA,cAAA,KAAG3C,UAAWuC,EAAc,eAAgBQ,EAAKU,UACjDd,EAAAA,cAAA,MAAI3C,UAAWuC,EAAc,YAAaQ,EAAKW,MAAMA,QACpC,QAAhBZ,EAAAC,EAAKM,mBAAW,IAAAP,OAAA,EAAhBA,EAAkBa,MAAOhB,EAAAA,cAAA,YAAMiB,EAAAA,EAAAA,GAAeb,EAAKM,cACpDV,EAAAA,cAAA,OAAK3C,UAAWuC,EAAc,WAC5BI,EAAAA,cAAA,QAAM3C,UAAU,QAAQ+C,EAAKc,cAE/BlB,EAAAA,cAACmB,EAAAA,QAAWC,UAAS,CAACC,SAAU,CAAEC,KAAM,GAAKjE,UAAWuC,EAAc,cACnEQ,EAAKmB,cAAcA,eAEtBvB,EAAAA,cAACF,EAAa,CAACC,WAAYK,EAAKoB,WAGjC,ECjBD5B,GAAgBC,EAAAA,EAAAA,IAAsB,CAAC,yBAEhC4B,EAAoEzE,IAG1E,IAH2E,IAChF0E,EAAG,mBACHpE,GAAqB,GACtBN,EACC,MAAO2E,EAAQ1D,IAAYP,EAAAA,EAAAA,KACrBC,GAAeC,EAAAA,EAAAA,GACnB,IACKC,EAAAA,OACA+D,EAAAA,EAAAA,IAAuB,KAE5BtE,GAGF,OACE0C,EAAAA,cAACjC,EAAAA,EAAO8D,IAAGzD,OAAAC,OAAA,CACTL,IAAK2D,EACLtE,UAAWuC,KACPjC,EAAa,CACfM,WACA6D,kBAAmB,CACjBC,iBAAkB,CAChBC,EAAG,KAELC,gBAAiB,CACfD,EAAG,OAKRN,EAAIQ,KAAI9B,GACPJ,EAAAA,cAACE,EAAkB,CAACtB,IAAKwB,EAAK+B,GAAI/B,KAAMA,MAE/B,ECzBJgC,EAA8DpF,IAIpE,IAJqE,MAC1EqF,EAAK,oBACLC,GAAsB,EAAK,mBAC3BhF,GAAqB,GACtBN,EACC,MAAMuF,GAAYC,EAAAA,EAAAA,eAAc,CAAEC,MAAOC,EAAAA,KACnCC,GAAWH,EAAAA,EAAAA,eAAc,CAAEC,MAAOG,EAAAA,KAClCtB,EAAOuB,IAAMR,EAAOC,EAAsB,EAnB3BQ,EAACP,EAAoBI,IACtCJ,EACK,EAGLI,EACK,EAGF,EAU6CG,CAAeP,EAAWI,IAE9E,OAAQI,IAAQV,GAMZ,KALFrC,EAAAA,cAAA,UACGsB,EAAKY,KAAI,CAACR,EAAKsB,IACdhD,EAAAA,cAACyB,EAAiB,CAAC7C,IAAKoE,EAAUtB,IAAKA,EAAKpE,mBAAoBA,MAG9D,C,kJC1BV,MAAMsC,GAAgBC,EAAAA,EAAAA,IAAsB,CAAC,wBAEhCoD,EAA6CjG,IAAqC,IAApC,mBAAEM,GAAqB,GAAON,EACvF,MAAOgB,EAAKC,IAAYP,EAAAA,EAAAA,KAElBC,GAAeC,EAAAA,EAAAA,GACnB,IACKC,EAAAA,OACA+D,EAAAA,EAAAA,IAAuB,KAE5BtE,GAGF,OACE0C,EAAAA,cAAA,OAAKhC,IAAKA,GACRgC,EAAAA,cAACkD,EAAAA,GAAa,KACZlD,EAAAA,cAACjC,EAAAA,EAAO8D,IAAGzD,OAAAC,OAAA,CAAChB,UAAWuC,KAAqBjC,EAAa,CAAEM,cACzD+B,EAAAA,cAACmD,EAAAA,EAAM,CACLpC,MAAM,mBACNqC,SAAS,4EAETpD,EAAAA,cAACqD,EAAAA,EAAgB,SAInB,C,yLCpBV,MAAMzD,GAAgBC,EAAAA,EAAAA,IAAsB,CAAC,SAEhCyD,EAA8BtG,IAAgD,IAA/C,aAAEuG,EAAY,SAAEC,EAAQ,cAAEC,GAAezG,EACnF,MAAM0G,GAAyB9F,EAAAA,EAAAA,GAAwB+F,EAAAA,IAEvD,OACE3D,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACjC,EAAAA,EAAO8D,IAAGzD,OAAAC,OAAA,CAAChB,UAAWuC,KAAqB8D,EAAuB,CAAEzF,UAAU,KAC7E+B,EAAAA,cAAA,OAAK3C,UAAU,aACb2C,EAAAA,cAACjD,EAAAA,EAAc,CACbK,YAAa,EACbH,WAAY2G,EAAAA,GACZvG,UAAWuC,EAAc,YAC1B,QAGDI,EAAAA,cAACjD,EAAAA,EAAc,CACbE,WAAY2G,EAAAA,GACZzG,MAAO,GACPE,UAAWuC,EAAc,eAC1B,iDAGDI,EAAAA,cAACoC,EAAAA,EAAc,CAACC,MAAOkB,EAAcjG,oBAAkB,IACtDiG,EAAa7E,OAAS8E,EAAS9E,QAC9BsB,EAAAA,cAAA,OAAK3C,UAAWuC,EAAc,aAC5BI,EAAAA,cAAA,UAAQ3C,UAAU,8BAA8BwG,QAASJ,GAAe,gBAOhFzD,EAAAA,cAACiD,EAAAA,EAAkB,MAClB,EC9BP,MAjBoDjG,IAAyC,IAAtC8G,MAAM,sBAAEC,IAAyB/G,EACtF,MAAQgH,MAAOR,GAAaO,GAEtB,EAACR,EAAY,EAAEU,IAAmBC,EAAAA,EAAAA,UAAwBV,EAASW,MAAM,EAL/D,IAOVV,GAAgBW,EAAAA,EAAAA,cACpB,IAAMH,GAAgBI,GAAab,EAASW,MAAM,EAAGE,EAAU3F,OARjD,MASd,CAAC8E,IAGH,OACExD,EAAAA,cAACsE,EAAAA,GAAM,KACLtE,EAAAA,cAACsD,EAAQ,CAACC,aAAcA,EAAcC,SAAUA,EAAUC,cAAeA,IAClE,EAMN,MA6BMc,EAAOA,KAClB,MAAM,MAAExD,EAAK,YAAEL,GAAgB8D,EAAAA,SAASC,KAExC,OAAOzE,EAAAA,cAAC0E,EAAAA,GAAG,CAAC3D,MAAOA,EAAOL,YAAaA,GAAe,C","sources":["webpack://reportportal.github.io/./src/components/AnimatedHeader/AnimatedHeader.tsx","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreviewItem/ArticleAuthor/icons/author.inline.svg","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreviewItem/ArticleAuthor/ArticleAuthor.tsx","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreviewItem/ArticlePreviewItem.tsx","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreviewRow/ArticlePreviewRow.tsx","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreview.tsx","webpack://reportportal.github.io/./src/components/SubscriptionBanner/SubscriptionBanner.tsx","webpack://reportportal.github.io/./src/containers/BlogPage/BlogPage.tsx","webpack://reportportal.github.io/./src/pages/blog.tsx"],"sourcesContent":["import { createElement, FC, PropsWithChildren } from 'react';\nimport { motion, Transition } from 'framer-motion';\nimport { useInView } from '@app/hooks/useInView';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\nimport { easeInOutTransition, opacityScaleAnimationProps, PropsWithAnimation } from '@app/utils';\n\ninterface AnimatedHeaderProps {\n  transition?: Transition;\n  delay?: number;\n  headerLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n  className?: string;\n}\n\nexport const AnimatedHeader: FC<PropsWithChildren<PropsWithAnimation<AnimatedHeaderProps>>> = ({\n  transition = easeInOutTransition,\n  delay,\n  headerLevel = 2,\n  className,\n  isAnimationEnabled = true,\n  children,\n}) => {\n  const [titleRef, isTitleInView] = useInView();\n\n  const getAnimation = useMotionEnterAnimation(\n    { ...opacityScaleAnimationProps, transition },\n    isAnimationEnabled,\n  );\n\n  return createElement(\n    motion[`h${headerLevel}`],\n    { className, ref: titleRef, ...getAnimation({ isInView: isTitleInView, delay }) },\n    children,\n  );\n};\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgAuthorinline = function SvgAuthorinline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 17,\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#8791AB\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M13.33 14.265V12.93a2.667 2.667 0 0 0-2.666-2.666H5.331a2.667 2.667 0 0 0-2.667 2.666v1.334M8.003 7.598a2.667 2.667 0 1 0 0-5.333 2.667 2.667 0 0 0 0 5.333Z\"\n  })));\n};\nexport default SvgAuthorinline;","import React, { FC } from 'react';\nimport { createBemBlockBuilder } from '@app/utils';\n\nimport AuthorIcon from './icons/author.inline.svg';\n\nimport './ArticleAuthor.scss';\n\ninterface ArticleAuthorProps {\n  authorName: string;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['article-author']);\n\nexport const ArticleAuthor: FC<ArticleAuthorProps> = ({ authorName }) => (\n  <p className={getBlocksWith()}>\n    <span className={getBlocksWith('__icon')}>\n      <AuthorIcon />\n    </span>\n    {authorName}\n  </p>\n);\n","import React, { FC } from 'react';\nimport { Link } from 'gatsby';\nimport { Typography } from 'antd';\nimport { renderRichText } from 'gatsby-source-contentful/rich-text';\nimport { BlogPostDto, createBemBlockBuilder } from '@app/utils';\n\nimport { ArticleAuthor } from './ArticleAuthor';\n\nimport './ArticlePreviewItem.scss';\n\nconst getBlocksWith = createBemBlockBuilder(['article-preview-item']);\n\ninterface ArticlePreviewItemProps {\n  post: BlogPostDto;\n}\n\nexport const ArticlePreviewItem: FC<ArticlePreviewItemProps> = ({ post }) => (\n  <li className={getBlocksWith()}>\n    <Link to={`/blog/${post.slug}`} className={getBlocksWith('__link')}>\n      <div className={getBlocksWith('__featured-image')}>\n        <img alt={post.featuredImage.description} src={post.featuredImage.file.url} />\n      </div>\n      <div className={getBlocksWith('__content')}>\n        <p className={getBlocksWith('__category')}>{post.category}</p>\n        <h2 className={getBlocksWith('__title')}>{post.title.title}</h2>\n        {post.description?.raw && <div>{renderRichText(post.description)}</div>}\n        <div className={getBlocksWith('__meta')}>\n          <span className=\"meta\">{post.publishDate}</span>\n        </div>\n        <Typography.Paragraph ellipsis={{ rows: 5 }} className={getBlocksWith('__excerpt')}>\n          {post.leadParagraph.leadParagraph}\n        </Typography.Paragraph>\n        <ArticleAuthor authorName={post.author} />\n      </div>\n    </Link>\n  </li>\n);\n","import React, { FC } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  BlogPostDto,\n  createBemBlockBuilder,\n  getEaseInOutTransition,\n  opacityScaleAnimationProps,\n  PropsWithAnimation,\n} from '@app/utils';\nimport { useInView } from '@app/hooks/useInView';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\n\nimport { ArticlePreviewItem } from '../ArticlePreviewItem';\n\ninterface ArticlePreviewRowProps {\n  row: BlogPostDto[];\n}\n\nconst getBlocksWith = createBemBlockBuilder(['article-preview-list']);\n\nexport const ArticlePreviewRow: FC<PropsWithAnimation<ArticlePreviewRowProps>> = ({\n  row,\n  isAnimationEnabled = false,\n}) => {\n  const [rowRef, isInView] = useInView();\n  const getAnimation = useMotionEnterAnimation(\n    {\n      ...opacityScaleAnimationProps,\n      ...getEaseInOutTransition(0.7),\n    },\n    isAnimationEnabled,\n  );\n\n  return (\n    <motion.div\n      ref={rowRef}\n      className={getBlocksWith()}\n      {...getAnimation({\n        isInView,\n        additionalEffects: {\n          hiddenAdditional: {\n            y: 150,\n          },\n          enterAdditional: {\n            y: 0,\n          },\n        },\n      })}\n    >\n      {row.map(post => (\n        <ArticlePreviewItem key={post.id} post={post} />\n      ))}\n    </motion.div>\n  );\n};\n","import React, { FC } from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport chunk from 'lodash/chunk';\nimport { useMediaQuery } from 'react-responsive';\nimport { BlogPostDto, MEDIA_DESKTOP_SM, MEDIA_TABLET_SM, PropsWithAnimation } from '@app/utils';\n\nimport { ArticlePreviewRow } from './ArticlePreviewRow';\n\nimport './ArticlePreview.scss';\n\ninterface ArticlePreviewProps {\n  posts: BlogPostDto[];\n  hasFixedItemsPerRow?: boolean;\n}\n\nconst getItemsPerRow = (isDesktop: boolean, isTablet: boolean) => {\n  if (isDesktop) {\n    return 3;\n  }\n\n  if (isTablet) {\n    return 2;\n  }\n\n  return 1;\n};\n\nexport const ArticlePreview: FC<PropsWithAnimation<ArticlePreviewProps>> = ({\n  posts,\n  hasFixedItemsPerRow = false,\n  isAnimationEnabled = false,\n}) => {\n  const isDesktop = useMediaQuery({ query: MEDIA_DESKTOP_SM });\n  const isTablet = useMediaQuery({ query: MEDIA_TABLET_SM });\n  const rows = chunk(posts, hasFixedItemsPerRow ? 3 : getItemsPerRow(isDesktop, isTablet));\n\n  return !isEmpty(posts) ? (\n    <ul>\n      {rows.map((row, rowIndex) => (\n        <ArticlePreviewRow key={rowIndex} row={row} isAnimationEnabled={isAnimationEnabled} />\n      ))}\n    </ul>\n  ) : null;\n};\n","import React, { FC } from 'react';\nimport { motion } from 'framer-motion';\nimport { FooterContent } from '@app/components/Layout';\nimport { SubscriptionForm } from '@app/components/SubscriptionForm';\nimport { Banner } from '@app/components/Banner';\nimport {\n  createBemBlockBuilder,\n  getEaseInOutTransition,\n  opacityScaleAnimationProps,\n  PropsWithAnimation,\n} from '@app/utils';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\nimport { useInView } from '@app/hooks/useInView';\n\nimport './SubscriptionBanner.scss';\n\nconst getBlocksWith = createBemBlockBuilder(['subscription-banner']);\n\nexport const SubscriptionBanner: FC<PropsWithAnimation> = ({ isAnimationEnabled = false }) => {\n  const [ref, isInView] = useInView();\n\n  const getAnimation = useMotionEnterAnimation(\n    {\n      ...opacityScaleAnimationProps,\n      ...getEaseInOutTransition(0.7),\n    },\n    isAnimationEnabled,\n  );\n\n  return (\n    <div ref={ref}>\n      <FooterContent>\n        <motion.div className={getBlocksWith()} {...getAnimation({ isInView })}>\n          <Banner\n            title=\"Stay in the know\"\n            subtitle=\"Get the latest ReportPortal news, product updates and articles via email\"\n          >\n            <SubscriptionForm />\n          </Banner>\n        </motion.div>\n      </FooterContent>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { motion } from 'framer-motion';\nimport { ArticlePreview } from '@app/components/ArticlePreview';\nimport { SubscriptionBanner } from '@app/components/SubscriptionBanner';\nimport {\n  createBemBlockBuilder,\n  BlogPostDto,\n  defaultSpringTransition,\n  heroBackgroundAnimationProps,\n} from '@app/utils';\nimport { AnimatedHeader } from '@app/components/AnimatedHeader';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\n\nimport './BlogPage.scss';\n\ninterface BlogPageProps {\n  visiblePosts: BlogPostDto[];\n  allPosts: BlogPostDto[];\n  loadMorePosts: () => void;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['blog']);\n\nexport const BlogPage: FC<BlogPageProps> = ({ visiblePosts, allPosts, loadMorePosts }) => {\n  const getBackgroundAnimation = useMotionEnterAnimation(heroBackgroundAnimationProps);\n\n  return (\n    <>\n      <motion.div className={getBlocksWith()} {...getBackgroundAnimation({ isInView: true })}>\n        <div className=\"container\">\n          <AnimatedHeader\n            headerLevel={1}\n            transition={defaultSpringTransition}\n            className={getBlocksWith('__title')}\n          >\n            Blog\n          </AnimatedHeader>\n          <AnimatedHeader\n            transition={defaultSpringTransition}\n            delay={0.1}\n            className={getBlocksWith('__subtitle')}\n          >\n            Product updates, news and technology articles\n          </AnimatedHeader>\n          <ArticlePreview posts={visiblePosts} isAnimationEnabled />\n          {visiblePosts.length < allPosts.length && (\n            <div className={getBlocksWith('__footer')}>\n              <button className=\"btn btn--outline btn--large\" onClick={loadMorePosts}>\n                Load more\n              </button>\n            </div>\n          )}\n        </div>\n      </motion.div>\n      <SubscriptionBanner />\n    </>\n  );\n};\n","import React, { FC, useCallback, useState } from 'react';\nimport { PageProps, graphql } from 'gatsby';\nimport { Layout, Seo } from '@app/components/Layout';\nimport { BlogPage } from '@app/containers/BlogPage';\nimport { BlogPostsQueryDto, BlogPostDto, SEO_DATA } from '@app/utils';\n\nconst PAGE_SIZE = 9;\n\nconst BlogIndex: FC<PageProps<BlogPostsQueryDto>> = ({ data: { allContentfulBlogPost } }) => {\n  const { nodes: allPosts } = allContentfulBlogPost;\n\n  const [visiblePosts, setVisiblePosts] = useState<BlogPostDto[]>(allPosts.slice(0, PAGE_SIZE));\n\n  const loadMorePosts = useCallback(\n    () => setVisiblePosts(prevState => allPosts.slice(0, prevState.length + PAGE_SIZE)),\n    [allPosts],\n  );\n\n  return (\n    <Layout>\n      <BlogPage visiblePosts={visiblePosts} allPosts={allPosts} loadMorePosts={loadMorePosts} />\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allContentfulBlogPost(sort: { date: DESC }) {\n      nodes {\n        id\n        slug\n        date(formatString: \"MMMM Do, YYYY\")\n        author\n        articleBody {\n          raw\n        }\n        title {\n          title\n        }\n        leadParagraph {\n          leadParagraph\n        }\n        category\n        featuredImage {\n          file {\n            url\n          }\n          description\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  const { title, description } = SEO_DATA.blog;\n\n  return <Seo title={title} description={description} />;\n};\n"],"names":["AnimatedHeader","_ref","transition","easeInOutTransition","delay","headerLevel","className","isAnimationEnabled","children","titleRef","isTitleInView","useInView","getAnimation","useMotionEnterAnimation","opacityScaleAnimationProps","createElement","motion","ref","isInView","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","props","xmlns","width","height","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","getBlocksWith","createBemBlockBuilder","ArticleAuthor","authorName","React","AuthorIcon","ArticlePreviewItem","_post$description","post","Link","to","slug","alt","featuredImage","description","src","file","url","category","title","raw","renderRichText","publishDate","Typography","Paragraph","ellipsis","rows","leadParagraph","author","ArticlePreviewRow","row","rowRef","getEaseInOutTransition","div","additionalEffects","hiddenAdditional","y","enterAdditional","map","id","ArticlePreview","posts","hasFixedItemsPerRow","isDesktop","useMediaQuery","query","MEDIA_DESKTOP_SM","isTablet","MEDIA_TABLET_SM","chunk","getItemsPerRow","isEmpty","rowIndex","SubscriptionBanner","FooterContent","Banner","subtitle","SubscriptionForm","BlogPage","visiblePosts","allPosts","loadMorePosts","getBackgroundAnimation","heroBackgroundAnimationProps","defaultSpringTransition","onClick","data","allContentfulBlogPost","nodes","setVisiblePosts","useState","slice","useCallback","prevState","Layout","Head","SEO_DATA","blog","Seo"],"sourceRoot":""}