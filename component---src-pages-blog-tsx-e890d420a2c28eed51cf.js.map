{"version":3,"file":"component---src-pages-blog-tsx-e890d420a2c28eed51cf.js","mappings":"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","sources":["webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreviewItem/ArticleAuthor/icons/author.inline.svg","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreviewItem/ArticleAuthor/ArticleAuthor.tsx","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreviewItem/ArticlePreviewItem.tsx","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreviewRow/ArticlePreviewRow.tsx","webpack://reportportal.github.io/./src/components/ArticlePreview/ArticlePreview.tsx","webpack://reportportal.github.io/./src/components/SubscriptionBanner/SubscriptionBanner.tsx","webpack://reportportal.github.io/./src/containers/BlogPage/BlogPage.tsx","webpack://reportportal.github.io/./src/pages/blog.tsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgAuthorinline = function SvgAuthorinline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 17,\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#8791AB\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M13.33 14.265V12.93a2.667 2.667 0 0 0-2.666-2.666H5.331a2.667 2.667 0 0 0-2.667 2.666v1.334M8.003 7.598a2.667 2.667 0 1 0 0-5.333 2.667 2.667 0 0 0 0 5.333Z\"\n  })));\n};\nexport default SvgAuthorinline;","import React, { FC } from 'react';\nimport { createBemBlockBuilder } from '@app/utils';\n\nimport AuthorIcon from './icons/author.inline.svg';\n\nimport './ArticleAuthor.scss';\n\ninterface ArticleAuthorProps {\n  authorName: string;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['article-author']);\n\nexport const ArticleAuthor: FC<ArticleAuthorProps> = ({ authorName }) => (\n  <p className={getBlocksWith()}>\n    <span className={getBlocksWith('__icon')}>\n      <AuthorIcon />\n    </span>\n    {authorName}\n  </p>\n);\n","import React, { FC } from 'react';\nimport { Link } from 'gatsby';\nimport { Typography } from 'antd';\nimport { renderRichText } from 'gatsby-source-contentful/rich-text';\nimport { BlogPostDto, createBemBlockBuilder } from '@app/utils';\n\nimport { ArticleAuthor } from './ArticleAuthor';\n\nimport './ArticlePreviewItem.scss';\n\nconst getBlocksWith = createBemBlockBuilder(['article-preview-item']);\n\ninterface ArticlePreviewItemProps {\n  post: BlogPostDto;\n}\n\nexport const ArticlePreviewItem: FC<ArticlePreviewItemProps> = ({ post }) => (\n  <li className={getBlocksWith()}>\n    <Link to={`/blog/${post.slug}`} className={getBlocksWith('__link')}>\n      <div className={getBlocksWith('__featured-image')}>\n        <img alt={post.featuredImage.description} src={post.featuredImage.file.url} />\n      </div>\n      <div className={getBlocksWith('__content')}>\n        <p className={getBlocksWith('__category')}>{post.category}</p>\n        <h2 className={getBlocksWith('__title')}>{post.title.title}</h2>\n        {post.description?.raw && <div>{renderRichText(post.description)}</div>}\n        <div className={getBlocksWith('__meta')}>\n          <span className=\"meta\">{post.publishDate}</span>\n        </div>\n        <Typography.Paragraph ellipsis={{ rows: 5 }} className={getBlocksWith('__excerpt')}>\n          {post.leadParagraph.leadParagraph}\n        </Typography.Paragraph>\n        <ArticleAuthor authorName={post.author} />\n      </div>\n    </Link>\n  </li>\n);\n","import React, { FC } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  BlogPostDto,\n  createBemBlockBuilder,\n  getEaseInOutTransition,\n  opacityScaleAnimationProps,\n  PropsWithAnimation,\n} from '@app/utils';\nimport { useInView } from '@app/hooks/useInView';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\n\nimport { ArticlePreviewItem } from '../ArticlePreviewItem';\n\ninterface ArticlePreviewRowProps {\n  row: BlogPostDto[];\n}\n\nconst getBlocksWith = createBemBlockBuilder(['article-preview-list']);\n\nexport const ArticlePreviewRow: FC<PropsWithAnimation<ArticlePreviewRowProps>> = ({\n  row,\n  isAnimationEnabled = false,\n}) => {\n  const [rowRef, isInView] = useInView();\n  const getAnimation = useMotionEnterAnimation(\n    {\n      ...opacityScaleAnimationProps,\n      ...getEaseInOutTransition(0.7),\n    },\n    isAnimationEnabled,\n  );\n\n  return (\n    <motion.div\n      ref={rowRef}\n      className={getBlocksWith()}\n      {...getAnimation({\n        isInView,\n        additionalEffects: {\n          hiddenAdditional: {\n            y: 150,\n          },\n          enterAdditional: {\n            y: 0,\n          },\n        },\n      })}\n    >\n      {row.map(post => (\n        <ArticlePreviewItem key={post.id} post={post} />\n      ))}\n    </motion.div>\n  );\n};\n","import React, { FC } from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport chunk from 'lodash/chunk';\nimport { useMediaQuery } from 'react-responsive';\nimport { BlogPostDto, MEDIA_DESKTOP_SM, MEDIA_TABLET_SM, PropsWithAnimation } from '@app/utils';\n\nimport { ArticlePreviewRow } from './ArticlePreviewRow';\n\nimport './ArticlePreview.scss';\n\ninterface ArticlePreviewProps {\n  posts: BlogPostDto[];\n  hasFixedItemsPerRow?: boolean;\n}\n\nconst getItemsPerRow = (isDesktop: boolean, isTablet: boolean) => {\n  if (isDesktop) {\n    return 3;\n  }\n\n  if (isTablet) {\n    return 2;\n  }\n\n  return 1;\n};\n\nexport const ArticlePreview: FC<PropsWithAnimation<ArticlePreviewProps>> = ({\n  posts,\n  hasFixedItemsPerRow = false,\n  isAnimationEnabled = false,\n}) => {\n  const isDesktop = useMediaQuery({ query: MEDIA_DESKTOP_SM });\n  const isTablet = useMediaQuery({ query: MEDIA_TABLET_SM });\n  const rows = chunk(posts, hasFixedItemsPerRow ? 3 : getItemsPerRow(isDesktop, isTablet));\n\n  return !isEmpty(posts) ? (\n    <ul>\n      {rows.map((row, rowIndex) => (\n        <ArticlePreviewRow key={rowIndex} row={row} isAnimationEnabled={isAnimationEnabled} />\n      ))}\n    </ul>\n  ) : null;\n};\n","import React, { FC } from 'react';\nimport { motion } from 'framer-motion';\nimport { FooterContent } from '@app/components/Layout';\nimport { SubscriptionForm } from '@app/components/SubscriptionForm';\nimport { Banner } from '@app/components/Banner';\nimport {\n  createBemBlockBuilder,\n  getEaseInOutTransition,\n  opacityScaleAnimationProps,\n  PropsWithAnimation,\n} from '@app/utils';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\nimport { useInView } from '@app/hooks/useInView';\n\nimport './SubscriptionBanner.scss';\n\nconst getBlocksWith = createBemBlockBuilder(['subscription-banner']);\n\nexport const SubscriptionBanner: FC<PropsWithAnimation> = ({ isAnimationEnabled = false }) => {\n  const [ref, isInView] = useInView();\n\n  const getAnimation = useMotionEnterAnimation(\n    {\n      ...opacityScaleAnimationProps,\n      ...getEaseInOutTransition(0.7),\n    },\n    isAnimationEnabled,\n  );\n\n  return (\n    <div ref={ref}>\n      <FooterContent>\n        <motion.div className={getBlocksWith()} {...getAnimation({ isInView })}>\n          <Banner\n            title=\"Stay in the know\"\n            subtitle=\"Get the latest ReportPortal news, product updates and articles via email\"\n          >\n            <SubscriptionForm />\n          </Banner>\n        </motion.div>\n      </FooterContent>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { motion } from 'framer-motion';\nimport { ArticlePreview } from '@app/components/ArticlePreview';\nimport { SubscriptionBanner } from '@app/components/SubscriptionBanner';\nimport {\n  createBemBlockBuilder,\n  BlogPostDto,\n  defaultSpringTransition,\n  heroBackgroundAnimationProps,\n} from '@app/utils';\nimport { AnimatedHeader } from '@app/components/AnimatedHeader';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\n\nimport './BlogPage.scss';\n\ninterface BlogPageProps {\n  visiblePosts: BlogPostDto[];\n  allPosts: BlogPostDto[];\n  loadMorePosts: () => void;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['blog']);\n\nexport const BlogPage: FC<BlogPageProps> = ({ visiblePosts, allPosts, loadMorePosts }) => {\n  const getBackgroundAnimation = useMotionEnterAnimation(heroBackgroundAnimationProps);\n\n  return (\n    <>\n      <motion.div className={getBlocksWith()} {...getBackgroundAnimation({ isInView: true })}>\n        <div className=\"container\">\n          <AnimatedHeader\n            headerLevel={1}\n            transition={defaultSpringTransition}\n            className={getBlocksWith('__title')}\n          >\n            Blog\n          </AnimatedHeader>\n          <AnimatedHeader\n            transition={defaultSpringTransition}\n            delay={0.1}\n            className={getBlocksWith('__subtitle')}\n          >\n            Product updates, news and technology articles\n          </AnimatedHeader>\n          <ArticlePreview posts={visiblePosts} isAnimationEnabled />\n          {visiblePosts.length < allPosts.length && (\n            <div className={getBlocksWith('__footer')}>\n              <button className=\"btn btn--outline btn--large\" onClick={loadMorePosts}>\n                Load more\n              </button>\n            </div>\n          )}\n        </div>\n      </motion.div>\n      <SubscriptionBanner />\n    </>\n  );\n};\n","import React, { FC, useCallback, useState } from 'react';\nimport { PageProps, graphql } from 'gatsby';\nimport { Layout, Seo } from '@app/components/Layout';\nimport { BlogPage } from '@app/containers/BlogPage';\nimport { BlogPostsQueryDto, BlogPostDto, SEO_DATA } from '@app/utils';\n\nconst PAGE_SIZE = 9;\n\nconst BlogIndex: FC<PageProps<BlogPostsQueryDto>> = ({ data: { allContentfulBlogPost } }) => {\n  const { nodes: allPosts } = allContentfulBlogPost;\n\n  const [visiblePosts, setVisiblePosts] = useState<BlogPostDto[]>(allPosts.slice(0, PAGE_SIZE));\n\n  const loadMorePosts = useCallback(\n    () => setVisiblePosts(prevState => allPosts.slice(0, prevState.length + PAGE_SIZE)),\n    [allPosts],\n  );\n\n  return (\n    <Layout>\n      <BlogPage visiblePosts={visiblePosts} allPosts={allPosts} loadMorePosts={loadMorePosts} />\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allContentfulBlogPost(sort: { date: DESC }) {\n      nodes {\n        id\n        slug\n        date(formatString: \"MMMM Do, YYYY\")\n        author\n        articleBody {\n          raw\n        }\n        title {\n          title\n        }\n        leadParagraph {\n          leadParagraph\n        }\n        category\n        featuredImage {\n          file {\n            url\n          }\n          description\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  const { title, description } = SEO_DATA.blog;\n\n  return <Seo title={title} description={description} />;\n};\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","props","xmlns","width","height","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","getBlocksWith","createBemBlockBuilder","ArticleAuthor","_ref","authorName","React","className","AuthorIcon","ArticlePreviewItem","_post$description","post","Link","to","slug","alt","featuredImage","description","src","file","url","category","title","raw","renderRichText","publishDate","Typography","Paragraph","ellipsis","rows","leadParagraph","author","ArticlePreviewRow","row","isAnimationEnabled","rowRef","isInView","useInView","getAnimation","useMotionEnterAnimation","opacityScaleAnimationProps","getEaseInOutTransition","motion","div","ref","additionalEffects","hiddenAdditional","y","enterAdditional","map","id","ArticlePreview","posts","hasFixedItemsPerRow","isDesktop","useMediaQuery","query","MEDIA_DESKTOP_SM","isTablet","MEDIA_TABLET_SM","chunk","getItemsPerRow","isEmpty","rowIndex","SubscriptionBanner","FooterContent","Banner","subtitle","SubscriptionForm","BlogPage","visiblePosts","allPosts","loadMorePosts","getBackgroundAnimation","heroBackgroundAnimationProps","AnimatedHeader","headerLevel","transition","defaultSpringTransition","delay","onClick","data","allContentfulBlogPost","nodes","setVisiblePosts","useState","slice","useCallback","prevState","Layout","Head","SEO_DATA","blog","Seo"],"sourceRoot":""}