{"version":3,"file":"component---src-templates-pricing-on-premises-tsx-fe5c0d7685150bb5978f.js","mappings":"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","sources":["webpack://reportportal.github.io/./src/components/InfoCard/InfoCard.tsx","webpack://reportportal.github.io/./src/components/OfferPageWrapper/icons/opensource.svg","webpack://reportportal.github.io/./src/components/OfferPageWrapper/TimeScale/TimeScale.tsx","webpack://reportportal.github.io/./src/components/OfferPageWrapper/OfferPageWrapper.tsx","webpack://reportportal.github.io/./src/containers/OnPremisesPage/constants.tsx","webpack://reportportal.github.io/./src/containers/OnPremisesPage/OnPremisesPage.tsx","webpack://reportportal.github.io/./src/templates/pricing/on-premises.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from '@app/components/Link';\nimport { createBemBlockBuilder, LinkDto } from '@app/utils';\n\nimport './InfoCard.scss';\n\nconst getBlocksWith = createBemBlockBuilder(['info-card']);\n\ninterface InfoCardProps {\n  title: string;\n  description: string;\n  link: LinkDto;\n  icon: string;\n}\n\nexport const InfoCard: FC<InfoCardProps> = ({ title, description, icon, link }) => (\n  <div className={getBlocksWith()}>\n    <img className={getBlocksWith('__image')} src={icon} alt=\"\" />\n    <div>\n      <strong className={getBlocksWith('__title')}>{title}</strong>\n      <p className={getBlocksWith('__description')}>{description}</p>\n    </div>\n    <Link\n      className={classNames(getBlocksWith('__button'), 'btn btn--outline btn--small')}\n      to={link.url}\n    >\n      {link.title}\n    </Link>\n  </div>\n);\n","export default __webpack_public_path__ + \"static/opensource-2c83d0903b6e730c73f5a2c6a93e6195.svg\";","import React, { FC, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { createBemBlockBuilder } from '@app/utils';\n\nimport './TimeScale.scss';\n\ninterface TimeScaleProps {\n  data: {\n    items: string[] | ReactNode[];\n    time: string | number;\n  }[];\n  isShifted?: boolean;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['time-scale']);\n\nexport const TimeScale: FC<TimeScaleProps> = ({ data, isShifted = false }) => (\n  <div\n    className={classNames(getBlocksWith('__wrapper'), {\n      [getBlocksWith('__wrapper-shifted')]: isShifted,\n    })}\n  >\n    <div\n      className={classNames(getBlocksWith('__periods-wrapper'), {\n        [getBlocksWith('__periods-wrapper--shifted')]: isShifted,\n      })}\n    >\n      {data.map(period => (\n        <div className={getBlocksWith('__period')} key={period.time}>\n          <span>{period.time}</span> hours\n        </div>\n      ))}\n    </div>\n    <div\n      className={classNames(getBlocksWith('__items-wrapper'), {\n        [getBlocksWith('__items-wrapper--shifted')]: isShifted,\n      })}\n    >\n      {data.map(period => (\n        <ul className={getBlocksWith('__list')} key={period.time}>\n          {period.items.map(item => (\n            <li key={item}>{item}</li>\n          ))}\n        </ul>\n      ))}\n    </div>\n  </div>\n);\n","import React, { FC, ReactNode, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport classNames from 'classnames';\nimport {\n  createBemBlockBuilder,\n  easeInOutOpacityScaleAnimationProps,\n  FormattedComparePlansDto,\n  OfferingPlansDto,\n} from '@app/utils';\nimport { usePricingHeroProps } from '@app/hooks/usePricingHeroProps';\nimport { FooterContent } from '@app/components/Layout';\nimport { TrustedOrganizations } from '@app/components/TrustedOrganizations';\nimport { Banner } from '@app/components/Banner';\nimport { Link } from '@app/components/Link';\nimport { PricingHero } from '@app/components/PricingHero';\nimport { ComparePlans } from '@app/components/ComparePlans';\nimport { PricingCard } from '@app/components/PricingCard';\nimport { Faq } from '@app/components/Faq';\nimport { CertificationCard } from '@app/components/CertificationCard';\nimport { InfoCard } from '@app/components/InfoCard';\nimport { useInView } from '@app/hooks/useInView';\nimport { useMotionEnterAnimation } from '@app/hooks/useMotionEnterAnimation';\nimport { useAnimationEnabledForSiblingRoutes } from '@app/hooks/useAnimationEnabledForSiblingRoutes';\nimport ToolIcon from '@app/svg/tool.inline.svg';\nimport HeadphonesIcon from '@app/svg/headphones.inline.svg';\nimport InfoIcon from '@app/svg/infoIcon.inline.svg';\n\nimport openSourceIcon from './icons/opensource.svg';\nimport { TimeScale } from './TimeScale';\n\nimport './OfferPageWrapper.scss';\n\ninterface OfferPageWrapperProps {\n  hero: {\n    title: string;\n    subtitle?: string;\n    description: string;\n    offerType: string;\n  };\n  page: string;\n  pagePath: 'on-premises' | 'd4j' | 'qasp' | 'hlm';\n  timeScaleData: {\n    time: number | string;\n    items: string[] | ReactNode[];\n  }[];\n  plans: OfferingPlansDto;\n  comparePlans: FormattedComparePlansDto;\n  faqData: {\n    key: number;\n    label: string;\n    children: ReactNode;\n  }[];\n  contactUsLink: string;\n  utilizationDescription: string;\n  faqLink?: string;\n  isScaleShifted?: boolean;\n}\n\nconst getBlocksWith = createBemBlockBuilder(['offer-page-wrapper']);\n\nexport const OfferPageWrapper: FC<OfferPageWrapperProps> = ({\n  hero: { title, subtitle, description, offerType },\n  page,\n  pagePath,\n  timeScaleData,\n  plans,\n  comparePlans,\n  faqData,\n  contactUsLink,\n  utilizationDescription,\n  faqLink,\n  isScaleShifted = false,\n}) => {\n  const { buttons } = usePricingHeroProps(page);\n  const [cardsRef, areCardsInView] = useInView();\n  const utilizationRef = useRef<HTMLDivElement>(null);\n  const isAnimationEnabled = useAnimationEnabledForSiblingRoutes();\n  const getCardsAnimation = useMotionEnterAnimation(\n    easeInOutOpacityScaleAnimationProps,\n    isAnimationEnabled,\n  );\n\n  const isPricingPage = page === 'pricing';\n  const pricingCardsAnimation = getCardsAnimation({\n    isInView: areCardsInView,\n    delay: 0.6,\n    additionalEffects: {\n      hiddenAdditional: { y: 50 },\n      enterAdditional: { y: 0 },\n    },\n  });\n  const [openSourcePlan, ...paidPlans] = plans.items;\n\n  return (\n    <>\n      <PricingHero\n        title={title}\n        subtitle={subtitle}\n        buttons={buttons}\n        activeButton={offerType}\n        offerType={offerType}\n        description={description}\n        isAnimationEnabled={isAnimationEnabled}\n      />\n      <motion.section\n        className={classNames(getBlocksWith('__plans-container'), 'container')}\n        ref={cardsRef}\n        {...pricingCardsAnimation}\n      >\n        <h2>Get a full year of benefits with our service packages</h2>\n        <div className={getBlocksWith('__plans')}>\n          {paidPlans.map(paidPlan => (\n            <PricingCard key={paidPlan.title} plan={paidPlan} planType=\"yearly\" />\n          ))}\n        </div>\n        <div className={getBlocksWith('__plans-topology')}>\n          <div className={getBlocksWith('__subscription-info')}>\n            <HeadphonesIcon />\n            <div>\n              Technical Support Points (hours) refer to the duration of the available technical\n              consultations.\n            </div>\n          </div>\n          <div className={getBlocksWith('__subscription-info')}>\n            <ToolIcon />\n            <div>\n              Professional Service Points (hours) reflect our specialists&apos; efforts on feature\n              development, integrations, etc.{' '}\n              <Link\n                to=\"#\"\n                onClick={event => {\n                  event.preventDefault();\n\n                  utilizationRef.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                }}\n              >\n                Learn more\n              </Link>\n            </div>\n          </div>\n        </div>\n        <InfoCard\n          icon={openSourceIcon}\n          title={openSourcePlan.title}\n          description={openSourcePlan.description as string}\n          link={{\n            title: openSourcePlan.cta.link.title,\n            url: openSourcePlan.cta.link.url,\n          }}\n        />\n      </motion.section>\n      <ComparePlans plans={comparePlans} isCollapsibleOnMobile={false} />\n      <div ref={utilizationRef} className={getBlocksWith('__utilization')}>\n        <h2>Indicative Professional Service Point utilization</h2>\n        <div className={getBlocksWith('__utilization-subtitle')}>{utilizationDescription}</div>\n        <TimeScale data={timeScaleData} isShifted={isScaleShifted} />\n        <div className={getBlocksWith('__subscription-info')}>\n          <InfoIcon />\n          <div>\n            Subscription plan Professional Service Points are accumulated monthly and last depending\n            on the plan selected.\n            <Link to=\"#faq\">More details in FAQ</Link>\n          </div>\n        </div>\n      </div>\n      {isPricingPage && (\n        <div className={getBlocksWith('__gradient-container')}>\n          <div className=\"container\">\n            <TrustedOrganizations />\n            <CertificationCard\n              subtitle=\"Ensuring the highest security standards\"\n              shouldDisplayLink\n            />\n          </div>\n        </div>\n      )}\n      <div className={getBlocksWith('__faq-container')}>\n        <Faq\n          items={faqData}\n          titleId=\"faq\"\n          documentationLink={faqLink}\n          showMoreInfoLink={pagePath !== 'qasp'}\n        />\n      </div>\n      <FooterContent>\n        <Banner title=\"Do you still have questions?\" linkTitle=\"Contact us\" link={contactUsLink} />\n      </FooterContent>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const TIME_SCALE_DATA = [\n  {\n    time: '1+',\n    items: ['ReportPortal training', 'Simple query resolved'],\n  },\n  {\n    time: '20+',\n    items: [\n      'Simple deployment on AWS with DB',\n      'Configuration of performance monitoring',\n      'Support of an existing Test Framework',\n    ],\n  },\n  {\n    time: '120+',\n    items: ['Plugin implementation', 'Integration with a new Test Framework'],\n  },\n];\n\nexport const FAQ_DATA = [\n  {\n    key: 1,\n    label: 'What is the validity period for Professional Service Points?',\n    children: (\n      <div>\n        The Professional Service Points included into the subscription plan are accumulated on a\n        monthly basis and are valid for the payment term only. If quarterly payment option is\n        chosen, no more than 3 monthly amounts of Professional Service Points can be accumulated or\n        used prospectively; if yearly payment option is chosen, up to 12 monthly amounts of\n        Professional Service Points can be accumulated or used prospectively.\n      </div>\n    ),\n  },\n  {\n    key: 2,\n    label: 'How is my subscription charged?',\n    children: (\n      <div>\n        Company will pay a fixed fee, in advance, based on the service level elected in the Order\n        Form.\n      </div>\n    ),\n  },\n  {\n    key: 3,\n    label: 'Can I pay monthly?',\n    children: (\n      <>\n        <div>Unfortunately, not for now.</div>\n        <div>\n          But we work to make it possible. Currently we do semi-manual invoice processing which\n          requires effort of the operations and accounting teams.\n        </div>\n        <div>\n          Monthly payments will be available as soon as we add online payment capabilities. This is\n          our highest priority at the moment.\n        </div>\n      </>\n    ),\n  },\n  {\n    key: 4,\n    label: 'What payment methods do you accept?',\n    children: (\n      <div>\n        As for now, the payment can be made via bank transfer (ACH, Wire) or check. Later on, we\n        plan to provide alternative forms of payment.\n      </div>\n    ),\n  },\n  {\n    key: 5,\n    label: 'Can I change billing plans at any time?',\n    children: (\n      <>\n        <div>Unfortunately, no.</div>\n        <div>You can&apos;t downgrade your billing plan at any time.</div>\n        <div>\n          However, if you need more Professional Service Points, we can discuss the plan upgrade.\n          For that, please, press &quot;Get a Quote&quot; in the upper right corner of our landing\n          page. We&apos;ll be happy to help you to find the most suitable plan for your team and\n          provide a quote.\n        </div>\n      </>\n    ),\n  },\n  {\n    key: 6,\n    label: 'What if I overuse or underuse my monthly limit?',\n    children: (\n      <>\n        <div>\n          If Company seeks to consume more Professional Service Points than have been contracted for\n          according to the Order, overage fees of 25% on a per Professional Service Point basis will\n          apply.\n        </div>\n        <div>\n          Professional Service Points may be used for the duration of the payment term, and expire\n          at that time. For example, annual upfront payment entitles Company to use the contracted\n          monthly service points at any point in the year. For a quarterly upfront payment, service\n          points must be used within three months.\n        </div>\n      </>\n    ),\n  },\n  {\n    key: 7,\n    label: 'What are the business hours of the service team?',\n    children: (\n      <div>\n        Unless otherwise agreed in writing, ReportPortal service personnel are located in the CET\n        time zone (UTC +1). Commercially reasonable efforts will be made to find overlap times where\n        synchronous communication with a Company is required. For purposes of finding overlap times,\n        the Company agrees to make its personnel available between 8 AM and 6 PM when synchronous\n        communication is required.\n      </div>\n    ),\n  },\n  {\n    key: 8,\n    label: 'I need a quote. How can I request one?',\n    children: (\n      <>\n        <div>Just press &quot;Get a Quote&quot; in the upper right corner of our landing page.</div>\n        <div>\n          We&apos;ll be happy to help you to find the most suitable plan for your team and provide a\n          quote.\n        </div>\n      </>\n    ),\n  },\n];\n","import React, { FC } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { OfferPageWrapper } from '@app/components/OfferPageWrapper';\nimport { OfferingPlansQuery, formatOfferingPlans } from '@app/utils';\n\nimport { FAQ_DATA, TIME_SCALE_DATA } from './constants';\n\nexport const OnPremisesPage: FC = () => {\n  const { plans, comparePlans } = formatOfferingPlans(\n    useStaticQuery<OfferingPlansQuery>(graphql`\n      query {\n        allContentfulComparePlan(filter: { internalTitle: { eq: \"On-Premises Compare Plan\" } }) {\n          nodes {\n            ...ComparePlanFields\n          }\n        }\n        allContentfulSection(filter: { internalTitle: { eq: \"[Offering Plan] On Premises\" } }) {\n          nodes {\n            ...OfferingPlansFields\n          }\n        }\n      }\n    `),\n  );\n\n  return (\n    <OfferPageWrapper\n      hero={{\n        title: 'ReportPortal services pricing',\n        subtitle: 'Flexible options for small teams to global enterprises',\n        description:\n          'ReportPortal instance deployed on-premise behind your firewall or in the Cloud. All your test data is located on your own instance and it is 100% secured.',\n        offerType: 'On-Premises',\n      }}\n      page=\"pricing\"\n      pagePath=\"on-premises\"\n      timeScaleData={TIME_SCALE_DATA}\n      plans={plans}\n      comparePlans={comparePlans}\n      faqData={FAQ_DATA}\n      contactUsLink=\"/contact-us/general\"\n      utilizationDescription=\"Professional Service Point is the minimum for any support request. Unless otherwise noted, a Professional Service Point is equal to an hour of work or fraction thereof\"\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { Layout, Seo } from '@app/components/Layout';\nimport { OnPremisesPage } from '@app/containers/OnPremisesPage';\nimport { SEO_DATA } from '@app/utils';\n\nconst OnPremises: FC = () => (\n  <Layout className=\"offer-page-wrapper\">\n    <OnPremisesPage />\n  </Layout>\n);\n\nexport default OnPremises;\n\nexport const Head = () => {\n  const { title, description } = SEO_DATA.onPremises;\n\n  return <Seo title={title} description={description} />;\n};\n"],"names":["getBlocksWith","createBemBlockBuilder","InfoCard","_ref","title","description","icon","link","React","className","src","alt","Link","classNames","to","url","TimeScale","data","isShifted","map","period","key","time","items","item","OfferPageWrapper","hero","subtitle","offerType","page","pagePath","timeScaleData","plans","comparePlans","faqData","contactUsLink","utilizationDescription","faqLink","isScaleShifted","buttons","usePricingHeroProps","cardsRef","areCardsInView","useInView","utilizationRef","useRef","isAnimationEnabled","useAnimationEnabledForSiblingRoutes","isPricingPage","pricingCardsAnimation","useMotionEnterAnimation","easeInOutOpacityScaleAnimationProps","getCardsAnimation","isInView","delay","additionalEffects","hiddenAdditional","y","enterAdditional","openSourcePlan","paidPlans","PricingHero","activeButton","motion","section","Object","assign","ref","paidPlan","PricingCard","plan","planType","HeadphonesIcon","ToolIcon","onClick","event","_utilizationRef$curre","preventDefault","current","scrollIntoView","behavior","block","openSourceIcon","cta","ComparePlans","isCollapsibleOnMobile","InfoIcon","TrustedOrganizations","CertificationCard","shouldDisplayLink","Faq","titleId","documentationLink","showMoreInfoLink","FooterContent","Banner","linkTitle","TIME_SCALE_DATA","FAQ_DATA","label","children","OnPremisesPage","formatOfferingPlans","useStaticQuery","OnPremises","Layout","Head","SEO_DATA","onPremises","Seo"],"sourceRoot":""}