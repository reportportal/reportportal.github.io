{"version":3,"file":"a63fd23211fbc6986035639f25e5e7f55c8a76f7-17d68931f7c3e70d3d1a.js","mappings":"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","sources":["webpack://reportportal.github.io/./src/components/Banner/Banner.tsx","webpack://reportportal.github.io/./src/hooks/useInView.ts","webpack://reportportal.github.io/./src/hooks/useMotionEnterAnimation.ts","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/use-reduced-motion.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://reportportal.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport { Link } from '@app/components/Link';\nimport { createBemBlockBuilder } from '@app/utils';\n\nimport './Banner.scss';\n\nconst getBlocksWith = createBemBlockBuilder(['banner']);\n\ninterface BannerProps {\n  title: string;\n  link?: string;\n  linkTitle?: string;\n  subtitle?: string;\n  dataGtm?: string;\n  children?: ReactNode;\n}\n\nexport const Banner: FC<BannerProps> = ({\n  title,\n  subtitle,\n  link,\n  linkTitle,\n  dataGtm,\n  children,\n}) => (\n  <div className={getBlocksWith()}>\n    <div className={getBlocksWith('__wrapper')}>\n      <div className={getBlocksWith('__inner')}>\n        <div className={getBlocksWith('__titles')}>\n          <div className={getBlocksWith('__title')}>{title}</div>\n          {subtitle && <div className={getBlocksWith('__subtitle')}>{subtitle}</div>}\n        </div>\n        {link && (\n          <div className={getBlocksWith('__btn-wrapper')}>\n            <Link\n              className=\"btn btn--primary btn--large\"\n              to={link}\n              {...(dataGtm && { 'data-gtm': dataGtm })}\n            >\n              {linkTitle}\n            </Link>\n          </div>\n        )}\n        {children}\n      </div>\n    </div>\n  </div>\n);\n","import { useRef } from 'react';\nimport { useInView as useFramerInView } from 'framer-motion';\n\ntype InViewOptions = Parameters<typeof useFramerInView>[1];\n\nexport const useInView = (options: InViewOptions = { once: true }) => {\n  const ref = useRef(null);\n  const isInView = useFramerInView(ref, options);\n\n  return [ref, isInView] as const;\n};\n","import { AnimationProps, Transition, useReducedMotion, Variant } from 'framer-motion';\nimport { useMediaQuery } from 'react-responsive';\nimport { MEDIA_TABLET_SM } from '@app/utils';\n\ninterface UseMotionEnterAnimationProps {\n  hiddenState: Variant;\n  enterState: Variant;\n  transition: Transition;\n}\n\ninterface AnimationGetterProps {\n  isInView: boolean;\n  delay?: number;\n  additionalEffects?: Partial<{\n    hiddenAdditional: Variant;\n    enterAdditional: Variant;\n    transitionAdditional: Transition;\n  }>;\n}\n\ntype AnimationGetter = (props: AnimationGetterProps) => AnimationProps;\n\nexport const useMotionEnterAnimation = (\n  { hiddenState, enterState, transition }: UseMotionEnterAnimationProps,\n  isEnabled = true,\n): AnimationGetter => {\n  const shouldReduceMotion = useReducedMotion();\n  const isTablet = useMediaQuery(\n    { query: MEDIA_TABLET_SM },\n    typeof window === 'undefined' ? { width: 800 } : undefined,\n  );\n  const shouldAnimate = !shouldReduceMotion && isEnabled && isTablet;\n\n  return ({\n    isInView,\n    delay = 0,\n    additionalEffects = { hiddenAdditional: {}, enterAdditional: {} },\n  }) => ({\n    initial: shouldAnimate ? 'hidden' : 'enter',\n    animate: shouldAnimate && (isInView ? 'enter' : 'hidden'),\n    exit: 'hidden',\n    variants: {\n      hidden: { ...hiddenState, ...additionalEffects.hiddenAdditional },\n      enter: { ...enterState, ...additionalEffects.enterAdditional },\n    },\n    transition: {\n      ...transition,\n      ...additionalEffects.transitionAdditional,\n      delay,\n    },\n  });\n};\n","import { useState } from 'react';\nimport { initPrefersReducedMotion } from './index.mjs';\nimport { warnOnce } from '../warn-once.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !hasReducedMotionListener.current && initPrefersReducedMotion();\n    const [shouldReduceMotion] = useState(prefersReducedMotion.current);\n    if (process.env.NODE_ENV !== \"production\") {\n        warnOnce(shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n    }\n    /**\n     * TODO See if people miss automatically updating shouldReduceMotion setting\n     */\n    return shouldReduceMotion;\n}\n\nexport { useReducedMotion };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.0.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         *\n         * isControlled should be set to true if sample is being run within\n         * a loop. This indicates that we're not arbitrarily sampling\n         * the animation but running it one step after another. Therefore\n         * we don't need to run a low-res version here. This is a stop-gap\n         * until a rewrite can sample for time.\n         */\n        sample: (t, isControlled = false) => {\n            elapsed = initialElapsed;\n            if (isControlled) {\n                update(t);\n                return state;\n            }\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t, true);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.0.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n"],"names":["getBlocksWith","createBemBlockBuilder","Banner","_ref","title","subtitle","link","linkTitle","dataGtm","children","React","className","Link","Object","assign","to","useInView","options","once","ref","useRef","useFramerInView","useMotionEnterAnimation","isEnabled","hiddenState","enterState","transition","shouldReduceMotion","current","useState","useReducedMotion","isTablet","useMediaQuery","query","MEDIA_TABLET_SM","window","width","undefined","shouldAnimate","_ref2","isInView","delay","additionalEffects","hiddenAdditional","enterAdditional","initial","animate","exit","variants","hidden","enter","transitionAdditional","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","isRefObject","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","some","name","isVariantNode","Boolean","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","startObserver","viewport","rootMargin","amount","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","splice","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","animateValue","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","isControlled","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","isBrowser","initPrefersReducedMotion","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","prefersReducedMotion","hasReducedMotionListener"],"sourceRoot":""}