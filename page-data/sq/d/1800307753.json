{"data":{"allContentfulBlogPost":{"nodes":[{"id":"4fae5f84-2af2-5510-8780-46b68558b5ac","date":"September 10th, 2025","author":"ReportPortal Team","articleBody":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Many large projects today use multiple test frameworks, and each produces its own format of test results. Keeping track of everything quickly becomes a mess. That's where ReportPortal comes in to help. It brings all your automated test reports together in one place, no matter what \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/log-data-in-reportportal/test-framework-integration/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"frameworks\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\", languages, and types of tests are involved. With a single dashboard for all your test results, you can finally stop searching through a bunch of separate logs and start focusing on what matters: understanding what’s working, what’s broken, and what needs attention.\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\n\\nAdvantages of ReportPortal as a unified test reporting tool:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Centralized test results \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Unified report format \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Faster error analysis \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Instant access to logs and screenshots \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Seamless bug tracking integration \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Visual reporting dashboards \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Support for multiple languages and frameworks \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Streamlined QA workflows  \",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"When you're working on a project that uses multiple test frameworks, dealing with test results can quickly become confusing. One tool gives you an HTML report, another spits out plain text, and a third might export data in CSV format. As a QA engineer, you're expected to switch between these formats, understand them all, and figure out what went wrong in each one.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Let’s say your UI tests are implemented in Playwright, your API tests run in Python, and both are executed through Jenkins as part of your CI/CD pipeline. Each tool has its own way of logging errors, and its own place to show them. This means you spend a lot of time just digging around trying to find out why a test failed. When you have dozens – or hundreds – of tests, that’s a lot of wasted time.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"ReportPortal brings all your test results together into a single, clean, and easy-to-use interface. You don’t need to jump between different tools or scan through messy logs – everything is already organized and visualized for you.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"HgASSQhDGc0bphGcCTDgu\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"With ReportPortal you can immediately see how your tests are doing, with statistics for Passed and Failed tests.  No need to open separate reports or dig through raw output. Even better, ReportPortal helps you understand why tests are failing. It uses \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/analysis/AutoAnalysisOfLaunches\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"Auto-Analysis\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" and \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/analysis/PatternAnalysis/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"Pattern Analysis\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" to group similar failures together and suggest possible causes: Product Bug, Automation Bug, System Issue, or To Investigate. So, if 50 tests failed because of wrong credentials, ReportPortal will notice the problem and group them for you. No need to investigate them one by one.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3DE6kg5M3JHZ6b0nUmDLB5\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"And when a test fails, ReportPortal gives you everything you need in one place – error messages, logs, and screenshots. You don’t have to go searching for files or logs on a server. It’s already there. This saves time and makes it much easier to understand what went wrong.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3Hp70dRcMCB90vwgnp7ygO\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"When you are using just test frameworks without integration with ReportPortal, creating bugs manually takes time. You usually have to copy the error log, paste it into a Jira ticket, maybe attach a file, and add a comment. With ReportPortal, you can \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/plugins/bug-tracking/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"create a bug\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" directly from the test result – just a couple of clicks (Post issue). You can also create link to failed test for easy reference (Link issue). The log and screenshot are already attached. This streamlines your workflow and helps your team fix issues faster.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"4nZil460Qh5zhP8urTwW5h\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3V7vXz0LrdNQ4M0NdU4m69\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"VVD5fMAt98mLUgEoef8nd\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"ReportPortal also makes it easy to build clean, visual \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/dashboards-and-widgets/ReportingAndMetricsInReportPortal#test-automation-reports-in-reportportal\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"test reports\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\". You can use \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/dashboards-and-widgets/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"widgets\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" to show your test results in a nice, clear way. It’s great for sharing updates with your team or manager. Just build the widgets and share with your team members as a link or pdf file – you’re done. Without ReportPortal, you’d have to gather test data manually, put it in a spreadsheet, and calculate everything yourself. That takes a lot more time.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"6Dx8Ru7hriLBVZ1aQMPGPq\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"2I8PqQkyGn0FTq9nvugEpH\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"ReportPortal serves as a valuable tool for projects that rely on multiple test frameworks, offering a single-entry point for managing and viewing all test results. By unifying various test outputs – whether from different frameworks, languages, or test types – into one organized and intuitive interface, ReportPortal streamlines the process of monitoring and analyzing test results. With powerful capabilities for automatic error grouping, detailed reporting, and seamless bug creation, ReportPortal minimizes the need to navigate through multiple logs and formats, saving valuable time and effort. By centralizing all test data, it enhances efficiency, enabling teams to focus on what matters most: identifying issues quickly, understanding their root causes, and accelerating the process of resolving them. \",\"marks\":[],\"data\":{}}]}]}"},"title":{"title":"All your test results, one place: smarter reporting across tools"},"leadParagraph":{"leadParagraph":"Many large projects today use multiple test frameworks, and each produces its own format of test results. Keeping track of everything quickly becomes a mess. That's where ReportPortal comes in to help."},"category":["Product"],"featuredImage":{"file":{"url":"//images.ctfassets.net/1n1nntnzoxp4/1xB49seTVbwMwMw5OTvBs6/a9a05c4a401996469e6126ea31a3be09/TestReporting-icon.png"}},"slug":"all-your-test-results-one-place-smarter-reporting-across-tools"},{"id":"2510db81-0155-501e-9a88-c806503b5498","date":"August 21st, 2025","author":"ReportPortal Team","articleBody":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Testing in healthcare isn’t just about finding bugs – it’s about keeping people’s data safe. When software manages patient records or supports medical decisions, it must be completely reliable. That’s where ReportPortal helps. It keeps testing organized, takes care of routine tasks automatically, and lets teams concentrate on what’s most important: making sure everything runs smoothly and safely.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"In this article, we’ll look at how ReportPortal can make a real difference in healthcare software testing.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"1. Enhancing patient data security\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"On-Premises deployment options provide healthcare organizations with full control over sensitive patient data, ensuring its protection against breaches or unauthorized access.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"If you prefer not to manage On-Premises deployments despite the open-source nature of the solution due to \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/blog/the-real-price-of-free-what-self-hosting-reportportal-actually-costs\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"hidden costs\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\", there is a dedicated SaaS option. It runs within an Amazon Virtual Private Cloud (VPC), and only you have access to it via SSO, fully compliant with \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/blog/reportportal-completes-soc-2-type-ii-audit\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"SOC 2 Type II\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" requirements.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"2. Support for critical system testing\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Healthcare systems often require rigorous testing of mission-critical software.  \\nTo validate the reliability of electronic health records (EHRs), telemedicine platforms, and medical devices, you may need to run not only a high number of tests but also at a high throughput – tests per second. ReportPortal supports both, making it easier to manage and analyze these demanding workloads.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"3. Stability of test environments\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"One of the defect types in ReportPortal is the system issue, which indicates how many test failures are caused by software or hardware problems in your testing environments, so you can resolve the most impactful problems first.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"4. Automating test result analysis for medical software\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Use AI/ML capabilities to automate the analysis of test results, identifying anomalies and ensuring higher reliability in software used for diagnostics and treatment planning.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"5. Role-based data access control\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Implement advanced access control to restrict sensitive health information to authorized personnel, maintaining data confidentiality while supporting collaborative testing.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"6. Localized testing for various markets\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"For global healthcare providers, ReportPortal offers multilingual interfaces and localization, facilitating adoption across regions with different language and market needs.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"7. Optimizing medical device software testing\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"If your test runs span several days, ReportPortal aggregates all results without requiring test re-creation or launch merging. You will have reliable evidence from large test executions, helping you maintain compliance and traceability without additional effort.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"8. Boosting efficiency in healthcare automation\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"ReportPortal provides \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/dashboards-and-widgets/ReportingAndMetricsInReportPortal\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"metrics\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" that assess the return on investment (\",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/blog/test-automation-roi\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"ROI\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\") for automation in healthcare software testing, allowing organizations to enhance their testing strategies and resource allocation.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"9. Improved decision support with centralized analytics\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Our test automation results dashboard aggregates testing data, empowering healthcare managers to make informed decisions about system quality and deployment readiness.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"10. Scalability for growing healthcare networks\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Designed to support the increasing demands of expanding systems, ReportPortal efficiently manages growing volumes of test data and complex infrastructures.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"11. Long-Term test result retention\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"In the healthcare domain, long-term storage of test results is not just a best practice – it's often a regulatory requirement. ReportPortal offers flexible and scalable \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/installation-steps-advanced/file-storage-options/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"storage options\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\", including \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/installation-steps-advanced/file-storage-options/S3CloudStorage\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"S3\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\", which is significantly more cost-effective for retaining large volumes of data compared to traditional persistent block storage.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Given the scale and duration of required data retention, you can \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/work-with-reports/OperationsUnderLaunches/#export-launches-reports\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"export critical launches along with all attachments\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" and archive them in verbatim storage for decades, if needed. Regardless of which test frameworks were used, all results are preserved in a unified format, making them easy to retrieve and review – especially in the event of an audit.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"ReportPortal also supports unlimited attachments at every level: individual tests, test suites, or entire launches – allowing you to organize artifacts in the way that best fits your processes.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"ReportPortal takes a lot of stress out of testing medical software. It helps teams work more efficiently, keep track of important data, and meet strict security and compliance standards. Most importantly, it lets testers focus on what matters — making sure healthcare systems are safe, stable, and ready to use.\",\"marks\":[],\"data\":{}}]}]}"},"title":{"title":"Benefits of ReportPortal for healthcare sector"},"leadParagraph":{"leadParagraph":"Testing in healthcare isn’t just about finding bugs – it’s about keeping people’s data safe. When software manages patient records or supports medical decisions, it must be completely reliable."},"category":["Product"],"featuredImage":{"file":{"url":"//images.ctfassets.net/1n1nntnzoxp4/1FuqY5uVsk2s7fuoefp4pE/84eec32eeeb9664aa0518d0d58e991c4/HealthcareSector-icon.png"}},"slug":"benefits-of-reportportal-for-healthcare-sector"},{"id":"993b6930-9f72-5230-a000-ae78060c8fe0","date":"August 14th, 2025","author":"ReportPortal Team","articleBody":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Timely and reliable reporting is essential for maintaining visibility, traceability, and quality control. However, teams may occasionally experience a launches delay in reporting, where the time between test execution and data visibility in the ReportPortal interface becomes unexpectedly long. These delays can undermine rapid feedback loops, disrupt CI/CD workflows, and complicate post-launch analysis. This article outlines the most common reasons for delays in reporting launches to ReportPortal and provides practical solutions to help you identify, mitigate, and prevent them.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"The potential causes of launches delay in reporting:\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"1. Queue processing delays\\n2. Launch finish request timing\\n3. Reporting under a finished launch\\n4. Infrastructure bottlenecks\\n5. High volume of data\\n6. Misconfigured reporting logic\\n7. Rerun launches\\n8. Auto-Analysis and Quality Gates\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"In the sections that follow, we’ll explore each of these issues in detail – along with practical solutions to help you address and prevent delays in launch reporting.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"1. Queue processing delays\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cause\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\": ReportPortal uses an asynchronous queue mechanism to handle reporting events. If the queue is overloaded, it can lead to delays.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Solution\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\":\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Monitor the queue size and processing time.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Scale up the infrastructure by increasing the number of consumers or processing nodes.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Optimize reporting logic to reduce unnecessary requests.  \",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"blockquote\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Note:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\nUse RabbitMQ management UI for these metrics that should be available \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://www.rabbitmq.com/docs/management\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"by default\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" on http://<host_name>:15672.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"2. Launch finish request timing\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cause\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\": If the launch finish request is not the last in the queue, the launch will still be marked as finished, but subsequent requests will be processed later. This can delay updating the launch statistics.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Solution\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\":\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Ensure all test items are reported before sending the launch finish request.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Use proper synchronization mechanisms in your test framework to avoid premature launch closure.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"3. Reporting under a finished launch\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cause\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\": Items reported after a launch is marked as finished will not be included in post-launch processes like \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/analysis/AutoAnalysisOfLaunches\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"Auto-Analysis\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" or \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/quality-gates/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"Quality Gates\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Solution\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\":\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Avoid reporting items under a finished launch.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Ensure the launch remains in the \\\"IN PROGRESS\\\" state until all items are reported.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"4. Infrastructure bottlenecks\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cause\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\": Insufficient resources in the ReportPortal infrastructure, such as database performance, memory, or CPU, can cause delays.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Solution\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\":\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Optimize database performance (e.g., indexing, query optimization). \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Allocate more resources (CPU, memory) to the ReportPortal server. \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Reduce network latency by deploying ReportPortal closer to the test execution environment. \",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"5. High volume of data\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cause\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\": Reporting many test items or logs simultaneously can overwhelm the system. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"blockquote\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Note:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" \\nDepending on the instance shape, there is a limit on the number of parallel HTTP requests per second.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Solution\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\":\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Distribute tests across multiple launches.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Monitor CPU/RAM usage\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Batch the reporting of test items to avoid overloading the system. \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Use log-level filtering to reduce the volume of logs sent to ReportPortal.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"blueBg If your tests use DEBUG-level logging, it can put significant load on the API and/or the API plus RabbitMQ when using asynchronous reporting. As a result, the Reporting API response time may increase noticeably. To avoid this, monitor the logging level in your tests and disable DEBUG unless necessary. Doing so can significantly improve reporting performance.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"6. Misconfigured reporting logic\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cause\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\": Incorrect implementation of the reporting logic in the test framework can lead to delays.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Solution\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\":\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Review the integration of your test framework with ReportPortal.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Ensure the reporting logic adheres to the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/developers-guides/ReportPortalAPI\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"ReportPortal API guidelines\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\". \",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"7. Rerun launches\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cause\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\": When rerunning a launch, the \\\"rerun\\\"=true parameter must be included in the request body. Missing this can lead to delays or incorrect reporting.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Solution\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\":\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Use the correct API endpoint and include the \\\"rerun\\\"=true parameter for rerun launches. \",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"8. Auto-Analysis and Quality Gates\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Cause\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\": Post-launch processes like Auto-Analysis and Quality Gates can take time to execute, especially for large launches.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Solution\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\":\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Optimize the configuration of Auto-Analysis and Quality Gates.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Schedule these processes during off-peak hours to reduce delays.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Reporting API response time by launch configuration and mode\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3MdqC9FFQgLxp4hHEXpSSh\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Thus, if you encounter delays when reporting launches to ReportPortal, first, use the following steps to diagnose and resolve the issue:\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"ordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Check the launch state:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\nEnsure the launch is in the \\\"IN PROGRESS\\\" state before reporting items.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Performance monitoring:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\n\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Use performance metrics such as CPU and RAM usage to make sure that you have enough computation power.  \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Review logs:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\nAnalyze the logs of both the test framework and ReportPortal for errors or warnings.\",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Test the API:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\nUse tools like Postman to verify API behavior and measure response times. \",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"These steps can help you systematically narrow down the source of reporting delays and verify whether the issue lies in infrastructure, reporting logic, or API configuration.\",\"marks\":[],\"data\":{}}]}]}"},"title":{"title":"Reporting API Response Time"},"leadParagraph":{"leadParagraph":"Timely and reliable reporting is essential for maintaining visibility, traceability, and quality control. However, teams may occasionally experience a launches delay in reporting, where the time between test execution and data visibility in the ReportPortal interface becomes unexpectedly long. "},"category":["Performance improvements"],"featuredImage":{"file":{"url":"//images.ctfassets.net/1n1nntnzoxp4/1Fgftn6nT2CGfw06lB3bxW/57245df316695d2b92c39ab0fec24762/ReportingAPIResponseTime.png"}},"slug":"reporting-api-response-time"}]}}}