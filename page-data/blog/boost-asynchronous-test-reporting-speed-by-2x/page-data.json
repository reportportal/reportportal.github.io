{"componentChunkName":"component---src-templates-blog-post-blog-post-tsx","path":"/blog/boost-asynchronous-test-reporting-speed-by-2x","result":{"data":{"contentfulBlogPost":{"id":"885d4165-44a4-5efc-a7fe-87e0c43d8133","slug":"boost-asynchronous-test-reporting-speed-by-2x","industry":"Performance improvements","title":{"title":"Boost asynchronous test reporting speed by 2x"},"seoTitle":null,"seoDescription":"Unlock 2x faster async reporting with ReportPortal.","featuredImage":{"file":{"url":"//images.ctfassets.net/1n1nntnzoxp4/64QGm2Hq5R0g0DVVOIsOiD/f03668be9cd79e6457050657994c3ffa/AsynchronousReporting-icon.png"}},"date":"September 30, 2024","author":"ReportPortal Team","articleBody":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"In version 24.2, ReportPortal offers 2x faster reporting under a 100% load: we’ve implemented a new asynchronous reporting approach. One of the key changes is the transition from a Direct exchange to a Consistent-hashing exchange. Using this exchange mechanism allows us to distribute messages more evenly and significantly boosts consumption efficiency from RabbitMQ by leveraging consistent hashing. Additionally, the retry mechanism was reworked to handle only messages related to the reporting order. Not related errors will be moved to parking lot queue without retries.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"In the previous implementation, the number of Retry queues had to match the number of reporting queues. Now, we have simplified this by using a single Retry queue for all API Service replicas.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"The number of Reporting queues remains the same as before, and you can still define the specific number of reporting queues during deployment. However, the number of Retry queues is simplified using a single Retry queue for all API Service replicas instead of matching the number to reporting queues.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Regarding the Dead letter queue, previously, messages lacked post-processing, causing them to stack indefinitely and consume a lot of space in RabbitMQ, requiring manual cleanup. In the new asynchronous reporting, we have implemented post-processing, where messages are automatically cleaned up after a defined time-to-live (TTL) timeout. This TTL can be flexibly configured during deployment and can vary for different workloads.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"As for Autoscaling, the old asynchronous reporting mode did not support it because we had to hardcode values for the total number of queues in our deployment. Now, we have introduced Autoscaling.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"We are glad to introduce the API service Autoscaling with the new asynchronous reporting implementation. Please refer to \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/installation-steps-advanced/ScalingReportPortalServices\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"this documentation\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" and \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/developers-guides/AsynchronousReporting\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"this guide\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" to read more technical details. The old asynchronous reporting did not support it as we had to declare the values for the total number of queues and per API queues in our deployment.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Let’s review the RabbitMQ metrics: \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"unordered-list\",\"data\":{},\"content\":[{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Consuming speed:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" we offer 2x faster reporting using asynchronous endpoints under a 100% load of ReportPortal compared to the previous implementation. \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Total messages processed:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" performance tests show that we are processing almost 18% more messages within the same time-range compared to the old asynchronous mode. \",\"marks\":[],\"data\":{}}]}]},{\"nodeType\":\"list-item\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Total consuming time:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" with the new consistent-hashing exchanges, we need 30% less time to process over 73% more messages.\",\"marks\":[],\"data\":{}}]}]}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1NKOgZYpqUhwhSSaepKXLY\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"32fWOSTrHngp8ygyIf5lIS\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Let's explore how it performs in RabbitMQ:\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3sKva3hAwN8h9ccaXAY0Lx\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"The main achievement is that we now consume up to 2,000 messages per second under 100% load between 2 to 4 PM, which represents a 100% increase in speed.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Going forward, the streamlined queue structure, improved post-processing with configurable time-to-live settings, and the introduction of autoscaling collectively enhance ReportPortal's ability to handle higher loads more effectively.\",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"1NKOgZYpqUhwhSSaepKXLY","__typename":"ContentfulAsset","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/1NKOgZYpqUhwhSSaepKXLY/5f90fc8dc8bc993f13f4b80c9f55d3df/AsynchronousReporting1.png?w=492&h=295&q=50&fm=webp 492w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/1NKOgZYpqUhwhSSaepKXLY/5f90fc8dc8bc993f13f4b80c9f55d3df/AsynchronousReporting1.png?w=984&h=590&q=50&fm=webp 984w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/1NKOgZYpqUhwhSSaepKXLY/5f90fc8dc8bc993f13f4b80c9f55d3df/AsynchronousReporting1.png?w=1968&h=1180&q=50&fm=webp 1968w","sizes":"(min-width: 1968px) 1968px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/1n1nntnzoxp4/1NKOgZYpqUhwhSSaepKXLY/5f90fc8dc8bc993f13f4b80c9f55d3df/AsynchronousReporting1.png?w=1968&h=1180&q=50&fm=png","srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/1NKOgZYpqUhwhSSaepKXLY/5f90fc8dc8bc993f13f4b80c9f55d3df/AsynchronousReporting1.png?w=492&h=295&q=50&fm=png 492w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/1NKOgZYpqUhwhSSaepKXLY/5f90fc8dc8bc993f13f4b80c9f55d3df/AsynchronousReporting1.png?w=984&h=590&q=50&fm=png 984w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/1NKOgZYpqUhwhSSaepKXLY/5f90fc8dc8bc993f13f4b80c9f55d3df/AsynchronousReporting1.png?w=1968&h=1180&q=50&fm=png 1968w","sizes":"(min-width: 1968px) 1968px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":1968,"height":1180},"description":"RabbitMQ metrics in comparison"},{"contentful_id":"32fWOSTrHngp8ygyIf5lIS","__typename":"ContentfulAsset","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/32fWOSTrHngp8ygyIf5lIS/44026f4029c3fb1c1f958057cb360bee/AsynchronousReporting2.png?w=327&h=229&q=50&fm=webp 327w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/32fWOSTrHngp8ygyIf5lIS/44026f4029c3fb1c1f958057cb360bee/AsynchronousReporting2.png?w=654&h=457&q=50&fm=webp 654w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/32fWOSTrHngp8ygyIf5lIS/44026f4029c3fb1c1f958057cb360bee/AsynchronousReporting2.png?w=1308&h=914&q=50&fm=webp 1308w","sizes":"(min-width: 1308px) 1308px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/1n1nntnzoxp4/32fWOSTrHngp8ygyIf5lIS/44026f4029c3fb1c1f958057cb360bee/AsynchronousReporting2.png?w=1308&h=914&q=50&fm=png","srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/32fWOSTrHngp8ygyIf5lIS/44026f4029c3fb1c1f958057cb360bee/AsynchronousReporting2.png?w=327&h=229&q=50&fm=png 327w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/32fWOSTrHngp8ygyIf5lIS/44026f4029c3fb1c1f958057cb360bee/AsynchronousReporting2.png?w=654&h=457&q=50&fm=png 654w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/32fWOSTrHngp8ygyIf5lIS/44026f4029c3fb1c1f958057cb360bee/AsynchronousReporting2.png?w=1308&h=914&q=50&fm=png 1308w","sizes":"(min-width: 1308px) 1308px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":1308,"height":914},"description":"Total consuming time with old async and new async"},{"contentful_id":"3sKva3hAwN8h9ccaXAY0Lx","__typename":"ContentfulAsset","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/3sKva3hAwN8h9ccaXAY0Lx/e53c5a9c91e2487eb8d9919a6992e3a0/AsynchronousReporting3.png?w=467&h=181&q=50&fm=webp 467w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/3sKva3hAwN8h9ccaXAY0Lx/e53c5a9c91e2487eb8d9919a6992e3a0/AsynchronousReporting3.png?w=934&h=363&q=50&fm=webp 934w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/3sKva3hAwN8h9ccaXAY0Lx/e53c5a9c91e2487eb8d9919a6992e3a0/AsynchronousReporting3.png?w=1867&h=725&q=50&fm=webp 1867w","sizes":"(min-width: 1867px) 1867px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/1n1nntnzoxp4/3sKva3hAwN8h9ccaXAY0Lx/e53c5a9c91e2487eb8d9919a6992e3a0/AsynchronousReporting3.png?w=1867&h=725&q=50&fm=png","srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/3sKva3hAwN8h9ccaXAY0Lx/e53c5a9c91e2487eb8d9919a6992e3a0/AsynchronousReporting3.png?w=467&h=181&q=50&fm=png 467w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/3sKva3hAwN8h9ccaXAY0Lx/e53c5a9c91e2487eb8d9919a6992e3a0/AsynchronousReporting3.png?w=934&h=363&q=50&fm=png 934w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/3sKva3hAwN8h9ccaXAY0Lx/e53c5a9c91e2487eb8d9919a6992e3a0/AsynchronousReporting3.png?w=1867&h=725&q=50&fm=png 1867w","sizes":"(min-width: 1867px) 1867px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":1867,"height":725},"description":"How it looks in RabbitMQ"}]}}},"pageContext":{"slug":"boost-asynchronous-test-reporting-speed-by-2x"}},"staticQueryHashes":["1130895138","2991584196","3617663447"],"slicesMap":{}}