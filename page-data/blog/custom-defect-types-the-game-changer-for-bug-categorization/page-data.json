{"componentChunkName":"component---src-templates-blog-post-blog-post-tsx","path":"/blog/custom-defect-types-the-game-changer-for-bug-categorization","result":{"data":{"contentfulBlogPost":{"id":"04e73636-9a08-5dfe-ab2c-629e7489e951","slug":"custom-defect-types-the-game-changer-for-bug-categorization","industry":"Product","title":{"title":"Custom Defect Types: The Game-Changer for Bug Categorization"},"seoTitle":null,"seoDescription":"Improve bug triage with custom defect types—track issues faster, assign clearly, and streamline QA reporting.","featuredImage":{"file":{"url":"//images.ctfassets.net/1n1nntnzoxp4/i6k0fkob4CL07GeGBkqsv/53f405461185a29589a8b2c9ec6389d6/CustomDefectType-icon.png"}},"date":"May 22, 2025","author":"ReportPortal Team","articleBody":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Standard \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/work-with-reports/InvestigationOfFailure#set-defect-type\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"defect types\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" like \\\"Product Bug\\\" or \\\"Automation Bug\\\" are helpful, but sometimes they just don’t tell the full story. That’s where custom defect types come in. They let you be more specific about what went wrong and who should investigate it. During defect triage, this can really save time – no need to figure out what type of defect it is (for example, \\\"Java Migration Issue\\\" or \\\"Not Implemented\\\"). You can mark issues that need investigation, flag known third-party problems, or highlight test failures that aren’t actually bugs.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Thanks to custom defect types, you can highlight trends and product areas where defects were occurring. For example, in the screenshot below, you can see how failures are distributed across the main defect type groups. You can also observe that the number of Product Bugs decreases with each run, while the number of Automation Bugs increases – however, in the latest launch, all tests passed.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"1cj7mM2NkYIPfPNMGoPSiX\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"And in the screenshot below, you can see the distribution of Product Bugs by custom defect types, which helps focus attention where it’s most needed. For example, most of the issues are related to Checkout.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"3tRTeP4kE8EvQtZDYbUBmx\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Look at the examples below to see how custom defect types can make issue handling faster, clearer, and more organized. \",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Custom \\\"To Investigate\\\"\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"\\nWe recommend using these custom defect types during the defect triage process when you need \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"to assign someone to investigate a failed test\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". The idea is to make it clear who is responsible for inspecting the issue.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Let’s say you are dealing with a common \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"third-party billing problem\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". Create a custom defect type \\\"Billing Vendor\\\" within \\\"To Investigate\\\" issue type specifically for this case and notify the vendor. This shows the failure has already been passed on to another team, and now you are waiting for their input.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Using this approach helps everyone stay on the same page, especially management. It is immediately obvious that the failure is not just sitting there unassigned – someone is already on it.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Once the root cause is known, the issue can be reclassified into its final state: System Issue, Product Bug, Automation Bug, or No Defect.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Examples:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" Third-party Billing, Third-party API – Pending Analysis, Issue for James Cooper, To Clarify, QA Investigate, Dev Team Investigate.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Custom \\\"No Defect\\\"\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Not every test failure is the result of a bug. Take this example: the billing service was down for planned maintenance during your test run. The vendor had notified you in advance, but your tests were still scheduled and ran anyway – of course they failed, but the reason is known.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"In this case, you can create and use a custom type like\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" \\\"Third-party Maintenance\\\"\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" under the \\\"No Defect\\\" group. It helps your issue statistics clean and accurate.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Other useful types in this group: \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\\"Manually Passed\\\" \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"or \\\"\",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Passed Locally\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"\\\" – for those times when a test fails in CI but passes just fine on your machine.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Examples:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" Third-party Maintenance, Manually Passed, Passed Locally, Aborted, Interrupted.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Custom \\\"System Issue\\\"\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"System Issues are often symptoms of deeper problems. For example, you might be unable to run some tests because the third-party vendor hasn’t provided a stable test environment.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Custom \\\"System Issue\\\" defect types help you track recurring problems like this. Instead of having to explain every week that 50 tests failed due an unstable vendor environment – and spending 10+ hours re-running them – you’ll have hard data to show where the time is going. Just create a custom \\\"Billing Env Unstable\\\" defect type and then build an \\\"Overall Statistics\\\" widget.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"In the screenshot below, you can see the distribution of failures by defect types, with most of the issues related to \\\"Billing Env Unstable\\\".\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"embedded-asset-block\",\"data\":{\"target\":{\"sys\":{\"id\":\"xFgENrwkm0yXSVdW6wUSO\",\"type\":\"Link\",\"linkType\":\"Asset\"}}},\"content\":[]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Sometimes the problem isn’t with the third-party vendor, but with another internal team. For example, you might be developing the Product Catalog while a neighboring team is working on the Shopping Cart. If your tests that verify adding items to the cart start failing, create a custom \\\"Cross-Team Integration Issue\\\" defect type to tag these cases and discuss with the team responsible for that part of the functionality how to stabilize your tests.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Examples:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" Billing Env Unstable, Cross-Team Integration Issue, Loading Issue, Performance Issue, Integration Issue, Platform Issue, Email Configuration.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Custom \\\"Automation Bug\\\"\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Custom \\\"Automation Bug\\\" defect types help break down what exactly went wrong on the automation side. Not every automation bug is caused by bad test logic. Sometimes the test environment is causing problems – performance issues, flaky services, etc. In situations like that, use a custom defect type that reflects it properly.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Or maybe the test itself is outdated. Before/after methods no longer work, credentials have changed, or the test data needs a refresh. In that case, a specific type like \\\"Outdated Test\\\" or \\\"Invalid Test Data\\\" makes things easier to track. If test data is a regular headache, you might want to look at \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://tdspora.ai/\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"TDspora\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Examples:\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" Performance Issue in CI, Outdated Test, Invalid Test Data, Test Script Issue, Framework Issue, Postman Issue, Under Review for Resolution, Flakу Test.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"heading-2\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Custom \\\"Product Bug\\\"\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Use a custom \\\"Product Bug\\\" defect type to specify which component is affected, such as \\\"Signup Issue\\\" or \\\"Checkout\\\".\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"This approach works well if you just need to quickly find failed test cases for a specific component and fix them as a priority. But if you have a lot of components and need to prepare a report for the Quality Manager, it might not be the most efficient way. That’s why we also recommend adding components as attributes and using the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"data\":{\"uri\":\"https://reportportal.io/docs/dashboards-and-widgets/ComponentHealthCheck\"},\"content\":[{\"nodeType\":\"text\",\"value\":\"\\\"Component Health Check\\\"\",\"marks\":[{\"type\":\"underline\"}],\"data\":{}}]},{\"nodeType\":\"text\",\"value\":\" widget for deeper analysis.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Also, use these custom defect types to indicate who is responsible for fixing the bug. If you’re blocked while waiting for a third-party vendor to complete their part, be sure to label it clearly – for example, \\\"Waiting for Vendor\\\".\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"Examples: \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Backend Issue, Waiting for Vendor, Signup Issue, Checkout, Billing Feature, Interface Issue, Known Issue.\",\"marks\":[],\"data\":{}}]},{\"nodeType\":\"paragraph\",\"data\":{},\"content\":[{\"nodeType\":\"text\",\"value\":\"In short, custom defect types make the whole debugging process a lot smoother. They help keep everyone aligned and make your data more useful for analysis. \",\"marks\":[],\"data\":{}}]}]}","references":[{"contentful_id":"1cj7mM2NkYIPfPNMGoPSiX","__typename":"ContentfulAsset","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/1cj7mM2NkYIPfPNMGoPSiX/19ddb9be8ac0959ea9f8675ef5478e2f/CustomDefectTypes1.png?w=352&h=289&q=50&fm=webp 352w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/1cj7mM2NkYIPfPNMGoPSiX/19ddb9be8ac0959ea9f8675ef5478e2f/CustomDefectTypes1.png?w=703&h=577&q=50&fm=webp 703w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/1cj7mM2NkYIPfPNMGoPSiX/19ddb9be8ac0959ea9f8675ef5478e2f/CustomDefectTypes1.png?w=1406&h=1154&q=50&fm=webp 1406w","sizes":"(min-width: 1406px) 1406px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/1n1nntnzoxp4/1cj7mM2NkYIPfPNMGoPSiX/19ddb9be8ac0959ea9f8675ef5478e2f/CustomDefectTypes1.png?w=1406&h=1154&q=50&fm=png","srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/1cj7mM2NkYIPfPNMGoPSiX/19ddb9be8ac0959ea9f8675ef5478e2f/CustomDefectTypes1.png?w=352&h=289&q=50&fm=png 352w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/1cj7mM2NkYIPfPNMGoPSiX/19ddb9be8ac0959ea9f8675ef5478e2f/CustomDefectTypes1.png?w=703&h=577&q=50&fm=png 703w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/1cj7mM2NkYIPfPNMGoPSiX/19ddb9be8ac0959ea9f8675ef5478e2f/CustomDefectTypes1.png?w=1406&h=1154&q=50&fm=png 1406w","sizes":"(min-width: 1406px) 1406px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":1406,"height":1154},"description":"Distribution of failures across the main defect type groups"},{"contentful_id":"3tRTeP4kE8EvQtZDYbUBmx","__typename":"ContentfulAsset","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/3tRTeP4kE8EvQtZDYbUBmx/d16e45ac4620f25de808fc399f6ade6a/CustomDefectTypes2.png?w=417&h=346&q=50&fm=webp 417w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/3tRTeP4kE8EvQtZDYbUBmx/d16e45ac4620f25de808fc399f6ade6a/CustomDefectTypes2.png?w=833&h=692&q=50&fm=webp 833w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/3tRTeP4kE8EvQtZDYbUBmx/d16e45ac4620f25de808fc399f6ade6a/CustomDefectTypes2.png?w=1666&h=1384&q=50&fm=webp 1666w","sizes":"(min-width: 1666px) 1666px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/1n1nntnzoxp4/3tRTeP4kE8EvQtZDYbUBmx/d16e45ac4620f25de808fc399f6ade6a/CustomDefectTypes2.png?w=1666&h=1384&q=50&fm=png","srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/3tRTeP4kE8EvQtZDYbUBmx/d16e45ac4620f25de808fc399f6ade6a/CustomDefectTypes2.png?w=417&h=346&q=50&fm=png 417w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/3tRTeP4kE8EvQtZDYbUBmx/d16e45ac4620f25de808fc399f6ade6a/CustomDefectTypes2.png?w=833&h=692&q=50&fm=png 833w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/3tRTeP4kE8EvQtZDYbUBmx/d16e45ac4620f25de808fc399f6ade6a/CustomDefectTypes2.png?w=1666&h=1384&q=50&fm=png 1666w","sizes":"(min-width: 1666px) 1666px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":1666,"height":1384},"description":"Distribution of Product Bugs by custom defect types"},{"contentful_id":"xFgENrwkm0yXSVdW6wUSO","__typename":"ContentfulAsset","gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/xFgENrwkm0yXSVdW6wUSO/6e80c3ebc5e90ca98016c1a4b007020d/CustomDefectTypes3.png?w=165&h=142&q=50&fm=webp 165w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/xFgENrwkm0yXSVdW6wUSO/6e80c3ebc5e90ca98016c1a4b007020d/CustomDefectTypes3.png?w=331&h=284&q=50&fm=webp 331w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/xFgENrwkm0yXSVdW6wUSO/6e80c3ebc5e90ca98016c1a4b007020d/CustomDefectTypes3.png?w=661&h=568&q=50&fm=webp 661w","sizes":"(min-width: 661px) 661px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/1n1nntnzoxp4/xFgENrwkm0yXSVdW6wUSO/6e80c3ebc5e90ca98016c1a4b007020d/CustomDefectTypes3.png?w=661&h=568&q=50&fm=png","srcSet":"https://images.ctfassets.net/1n1nntnzoxp4/xFgENrwkm0yXSVdW6wUSO/6e80c3ebc5e90ca98016c1a4b007020d/CustomDefectTypes3.png?w=165&h=142&q=50&fm=png 165w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/xFgENrwkm0yXSVdW6wUSO/6e80c3ebc5e90ca98016c1a4b007020d/CustomDefectTypes3.png?w=331&h=284&q=50&fm=png 331w,\nhttps://images.ctfassets.net/1n1nntnzoxp4/xFgENrwkm0yXSVdW6wUSO/6e80c3ebc5e90ca98016c1a4b007020d/CustomDefectTypes3.png?w=661&h=568&q=50&fm=png 661w","sizes":"(min-width: 661px) 661px, 100vw"}},"layout":"constrained","backgroundColor":"#f8f8f8","width":661,"height":568},"description":"Overall Statistics widget with distribution of failures by defect types"}]}}},"pageContext":{"slug":"custom-defect-types-the-game-changer-for-bug-categorization"}},"staticQueryHashes":["1130895138","2991584196","3617663447"],"slicesMap":{}}